@model RadialReview.Models.ViewModels.ReviewsViewModel
@{
	ViewBag.Title = "Reports";
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Page = "Stats";
	ViewBag.ExtraTabs = ExtraTab.Create("Stats", "/Statistics/Review/" + Model.Review.Id);
	ViewBag.Subheading = "Statistics for '" + Model.Review.ReviewName + "'";

}

@section top{
	<div class="jumbotron">
		<h1>Reports</h1>
	</div>
}

@section header{
	@*@Html.Partial("_ReviewsHeader")*@
}

@{
	var direct = Model.Review.Reviews.Where(x => x.ForUser.GetDirectlyManaging()).ToList();
	var indirect = Model.Review.Reviews.Where(x => true || !x.ForUser.GetDirectlyManaging()).ToList();
	var panels = new List<Tuple<int, String, List<RadialReview.Models.ReviewModel>>>(){
		Tuple.Create(1, "Subordinates", direct),
		Tuple.Create(2, "Everyone", indirect)
	};
}

@using (Html.BeginStyles())
{
	<style>
		.nav-tabs .active a {
			background-color: #FFF !important;
		}
	</style>
}
<div style="height: 45px;"></div>
<div role="tabpanel">
	<ul class="nav nav-tabs" role="tablist">
		<li role="presentation" class="active"><a href="#statPanel_1" aria-controls="home" role="tab" data-toggle="tab">Stats</a></li>
		<li role="presentation" class=""><a href="#statPanel_2" aria-controls="home" role="tab" data-toggle="tab">Aggregate</a></li>
	</ul>
	<div class="tab-content">
		<div role="tabpanel" class="tab-pane in active" id="statPanel_1">
			<div class="panel panel-body">
				@Html.Partial("_ReviewStats", Model.Review.Id)
			</div>
		</div>
		<div role="tabpanel" class="tab-pane in" id="statPanel_2">
			<div class="panel panel-body">
				@Html.Partial("_ReviewStats2", Model.Review.Id)
			</div>
		</div>
	</div>
</div>

@*<div class="panel panel-primary startHiddenGroup">
		<div class="panel-heading">
			<h3 class="panel-title">Review progress</h3>
		</div>

		<div class="panel-body">
		</div>
	</div>*@
@if (ViewBag.IsManager ?? false)
{
	<div class="smallBreak2 alignRight" style="padding-bottom: 5px;">
		<div class="btn btn-default" onclick="sendReminders()">Send Reminder</div>
		<div class="btn btn-link" onclick="$('.active .userCheck').prop('checked',true)">Select All</div>
		<div class="btn btn-link" onclick="$('.active .userCheck').removeAttr('checked')">Select None</div>
	</div>

	<div class="panel panel-primary startHiddenGroup">
		<div role="tabpanel">
			<ul class="nav nav-tabs" role="tablist">
				@foreach (var panel in panels)
				{
					<li role="presentation" class="@(panel.Item1==1?"active":"")"><a href="#panel_@(panel.Item1)" aria-controls="home" role="tab" data-toggle="tab">@panel.Item2</a></li>
				}
			</ul>
		</div>
		<div class="tab-content">

			@foreach (var panel in panels)
			{

				@*<div class="panel-heading ">
						<h3 class="panel-title">Individual progress: @panel.Item2</h3>
					</div>*@
				<div role="tabpanel" class="tab-pane in @(panel.Item1==1?"active":"")" id="panel_@(panel.Item1)">
					<div class="table-responsive">
						<table class="table table-condensed table-hover">
							<thead>
								<tr>
									<th style="width:10px;"></th>
									<th>Name</th>
									<th class="alignCenter" style="width:10px;">Reviewed by</th>
									<th class="alignCenter" style="width:10px;"># Reviewed</th>
									<th class="alignCenter" style="width:150px;">Completion</th>
									@*<th style="width:10px;">Report</th>*@
								</tr>
							</thead>
							<tbody>
								@foreach (var review in panel.Item3.OrderByDescending(x =>
							{
								double complete = Model.Review.Reviews.Sum(n => n.Answers.Where(z => z.ByUserId == x.ForUserId).Distinct(y => y.AboutUserId).Count(y => y.Complete));
								double total = Model.Review.Reviews.Sum(n => n.Answers.Where(z => z.ByUserId == x.ForUserId).Distinct(y => y.AboutUserId).Count());
								return complete / total;
							}))
								{
									@*onclick="$(this).find('.userCheck').prop('checked', !$(this).find('.userCheck').prop('checked'))"*@
									<tr class="checkRow @(review.ForUser.GetPersonallyManaging() ? "managing" : "not-managing")">
										<td style="cursor:pointer" onclick="$(this).find('>input').prop('checked', function (i, v) { return !v;})"><input type="checkbox" class="userCheck clickThrough" name="user_@review.ForUserId" data-id="@review.ForUserId" /></td>
										<td class="table-hover-underline"><a href="@Url.Action("Details", "Review", new { id = review.Id })">@review.ForUser.GetNameAndTitle()</a></td>
										<td class="alignCenter">
											@Model.Review.Reviews.Sum(x => x.Answers.Where(z => z.AboutUserId == review.ForUserId).Distinct(y => y.ByUserId).Count(y => y.Complete))/
											@Model.Review.Reviews.Sum(x => x.Answers.Where(z => z.AboutUserId == review.ForUserId).Distinct(y => y.ByUserId).Count())
										</td>
										<td class="alignCenter">
											@Model.Review.Reviews.Sum(x => x.Answers.Where(z => z.ByUserId == review.ForUserId).Distinct(y => y.AboutUserId).Count(y => y.Complete))/
											@Model.Review.Reviews.Sum(x => x.Answers.Where(z => z.ByUserId == review.ForUserId).Distinct(y => y.AboutUserId).Count())
										</td>
										<td>@Html.Partial("_Completion", review.GetCompletion())</td>
										@*<td>
												@if (review.ForUser.GetPersonallyManaging())
												{
													<a href="/Review/Details/@review.ClientReview.Id">Report</a>
												}
											</td>*@
										<td class="alignCenter" style="width: 30px;">
											<a data-sort="@(review.ClientReview.Visible? "1" : "2")">@review.ClientReview.Visible.GetIcon()</a>
										</td>
									</tr>
								}
							</tbody>

						</table>
					</div>
				</div>
			}
		</div>
		@using (Html.BeginScripts())
		{
			<script>

				function sendReminders() {
					var ids = [];
					$('.userCheck:checked').each(function () {
						ids.push($(this).data("id"));
					});
					if (ids && ids.length != 0) {
						showModal('Send Reminder', '/Email/Remind?reviewId=@(Model.Review.Id)&userIds=' + ids.join(","), '/Email/Remind');
					} else {
						showAlert("You must select at least one user");
					}
				}
			</script>
		}
	</div>
}