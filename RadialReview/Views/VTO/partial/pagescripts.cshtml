@{Html.RenderPartial("~/Views/CDN/Angular.cshtml");}
@using (Html.BeginStyles())
{
    @*<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.0-rc.1/angular.min.js"></script>*@
    <link href="~/Content/VTO/VTO.css" rel="stylesheet" />
}
@using (Html.BeginScripts())
{
    <script src="~/Scripts/VTO/vto.js"></script>

    <script src="~/Scripts/jquery/jquery.ba-throttle-debounce.js"></script>
    <script src="https://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-filter/0.5.4/angular-filter.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js"></script>
    @Scripts.Render("~/bundles/vto")
    <script src="~/Scripts/Angular/VTO/VtoController.js"></script>
    <script>
        angular.module('VtoApp')
			.value('vtoId', @Model.Id)
			.value('vtoDataUrlBase', '/Vto/Data/')
			.value("vtoCallback",false);

    </script>
}
@using (Html.BeginStyles())
{
    <link href="~/Content/VTO/VtoPrint.css" rel="stylesheet" />
    <link href="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet">
    <style>
        .vto textarea {
            /*padding: 0px 2px;
            margin: 0;
            margin-bottom: -4px;*/
        }

        .datepicker2 {
            width: inherit !important;
        }

        span.lbl {
            width: 100px;
            display: inline-block;
            text-align: left;
        }

        span.input input {
            width: 250px;
            display: inline-block;
            text-align: left;
            padding: 0;
        }


        .dollar:before {
            content: "$";
            display: inline-block;
            color: #565656;
            font-size: 80%;
            bottom: 3px;
            position: relative;
        }
    </style>
}

@using (Html.BeginScripts())
{
    <script src="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/js/bootstrap-editable.min.js"></script>
    <script>
        $.fn.editable.defaults.ajaxOptions = { type: "POST" };
        $.fn.editable.defaults.mode = 'popup';

        /*$(".datepicker").datepickerX({
		    format: 'mm/dd/yyyy',
		    todayBtn: true
	    }).on('changeDate',function(ev) {
		    angular.element(this).triggerHandler('change');
		    $(this).datepickerX("hide");
	    });*/
        //$( ".datepicker" ).datepicker( "setDate", $.datepicker.parseDate( "yy-mm-dd", $(".datepicker").val() ));

        //$("textarea").autoResize({});

        $("body").on('click', ".inlineEdit", function() {
            if (!$(this).attr("editable")) {
                $(this).editable({
                    savenochange: true,
                    validate: function(value) {
                        if ($.trim(value) == '') {
                            return 'This field is required';
                        }
                    },
                    success: function(data) {

                        /*var items = $(".grid[data-measurable=" + $(this).data("measurable") + "]");

					if ($(this).data("name") == "direction") {
						$(items).attr("data-goal-dir", $(this).attr("data-value"));
					} else if ($(this).data("name") == "target") {
						$(items).attr("data-goal", $(this).attr("data-value"));
					}
					$(items).each(function (d) {
						updateScore(this);
					});
					debugger;*/
                    }
                });
                $(this).attr("editable", "1");
                $(this).click();
            }
        });
    </script>
    <script>

        function addRowEnter() {

        }

        $(function() {
            $(".add-row-container").on("keypress", ".add-row-row:last input", function(e) {
                if(e.which == 13) {
                    e.preventDefault();
                    angular.element($(this).parents(".add-row-container").find(".add-row")).triggerHandler('click');
                    var self = this;
                    setTimeout(function() {
                        $(self).parents(".add-row-container").find(".add-row-row:last input").focus();
                    }, 450);
                }
            });
        });


        function shrink(self) {
            var count = 0;
            var noskip = 0;
            $(self).find(".resize-item").each(function() {
                var newSize = parseInt($(this).css("font-size")) - 1;
                count++;
                if (newSize == 0) {
                    return;
                }
                noskip++;

                $(this).css("font-size", newSize + "px");
            });

            return count == noskip;
        }

        function resizeGroup(self) {
            $(self).find(".resize-item").css("font-size", "13px");
            while ($(self).children().height() > $(self).height()) {
                var keepGoing = shrink(self);
                if (!keepGoing)
                    return;
            }
            shrink(self);
        }

        refreshDocHeight = function() {
            $(".resize-group").each(function() {
                resizeGroup($(this));
            });
        };

        $(window).resize(refreshDocHeight);

        setTimeout(refreshDocHeight, 1);


    </script>

}