@using RadialReview.Models.Log
@model List<RadialReview.Models.Log.InteractionLogItem>
@{
	ViewBag.Title = "Log Interaction";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var emptyVM = new InteractionLogItem();
}

<div class="pull-right">
	<span class="time "> &nbsp; </span>
	<button class="btn btn-default" id="pause" onclick="pause()" disabled>Pause</button>
	<button class="btn btn-success" id="start" onclick="start()">Start</button>
</div>
<h2 class="pull-left">Log Interaction</h2>

<div class="clearfix"></div>

@using (Ajax.BeginForm(new AjaxOptions()
{
	HttpMethod = "post",
	InsertionMode = InsertionMode.InsertBefore,
	UpdateTargetId = "empty-row",
	Url = "/Log/Create",
}))
{
	<input type="hidden" name="UserId" />
	<input type="hidden" name="CreatedBy" value="@Html.UserOrganization().Id" />
	<div class="row smallBreak2">
		<div class="col-sm-3 noPadLeft"><label>Type</label>@Html.EnumDropDownList("InteractionType", InteractionType.InitialContact, new { @class = "form-control" })</div>
		<div class="col-sm-2 noPadLeft"><label>Method</label>@Html.EnumDropDownList("InteractionMethod", InteractionMethodType.Call, new { @class = "form-control" })</div>
		<div class="col-sm-2 noPadLeft"><label>Duration (min)</label>@Html.TextBox("Duration", "", new { @class = "form-control" })</div>
		<div class="col-sm-5 noPadLeft"><label>Search</label><select class="form-control js-data-example-ajax"></select></div>

	</div>
	<div class="row smallBreak2">
		<div class="col-sm-3 noPadLeft"><label>Name</label><input class="form-control" type="text" name="Name" /></div>
		<div class="col-sm-3 noPadLeft"><label>Email</label><input class="form-control" type="text" name="Email" /></div>
		<div class="col-sm-6 noPadLeft"><label>Company</label><input class="form-control" type="text" name="Company" /></div>

	</div>
	<div class="row smallBreak2">
		<div class="col-sm-9 noPadLeft"><label>Notes</label><textarea class="form-control verticalOnly" name="Notes" rows="4"></textarea></div>
		<div class="col-sm-3 noPadLeft">
			<label>Date Contacted</label>
			<input class="form-control smallBreak2" type="date" name="LogDate" value="@DateTime.Today.ToString("yyyy-MM-dd")" />

			<div class="alignCenter  clearfix">
				<button type="submit" class="btn btn-primary" onclick="saveForm()">Save</button>
				<button type="reset" class="btn btn-default" onclick="clearForm()">Clear</button>
			</div>
			<div class="clearfix"></div>
		</div>

	</div>

}

<hr />
<div class="table-responsive">
	<table class="table table-bordered table-condensed table-striped tablesorter">
		<thead>
			<tr>
				<th>Id</th>
				<th>Type</th>
				<th>Method</th>
				<th>Date</th>
				<th>UserId</th>
				<th>Name</th>
				<th>Email</th>
				<th>Company</th>
				<th>Duration (min)</th>
				<th>Created By</th>
				<th>Notes</th>
			</tr>
		</thead>
		<tbody id="empty-row">
			@foreach (var row in Model.OrderByDescending(x => x.Id))
			{
				Html.RenderPartial("Row", row);
			}
		</tbody>
	</table>
</div>
@using (Html.BeginStyles())
{
	<style>
		.select2-container .select2-selection--single {
			height: 34px !important;
		}

		td, th {
			white-space: nowrap;
			-ms-text-overflow: ellipsis;
			-o-text-overflow: ellipsis;
			text-overflow: ellipsis;
		}

		button {
			width: 80px;
		}
		
		

		.time {
			border: 1px solid #D3D3D3;
			width: 100px;
			/* height: 30px; */
			display: inline-block;
			text-align: center;
			top: 1px;
			position: relative;
			height: 22px;
			background-color: #EFEFEF;
			color: #666;
		}
		.running {
			background-color: white;
		}
	</style>
}

@using (Html.BeginScripts())
{
	<script>
		var time = null;
		var running = false;
		var duration = 0;

		function clearForm() {
			time = null;
			running = false;
			duration = 0;
			$("#pause").attr("disabled", true);
			$("#pause").html("Pause");
			$("#start").html("Start");
			$(".time").html("&nbsp;");
		}

		function saveForm() {
			pause();
		}

		function start() {
			$("#pause").removeAttr("disabled");
			time = new Date();
			duration = 0;
			running = true;
			$("#pause").html("Pause");
			$("#start").html("Restart");
		}

		setInterval(function () {
			if (running) {
				var curtime = new Date();
				var elapseMin = ((((curtime - time) % 86400000) % 3600000) / 60000);
				var elapseMinR = Math.floor((((curtime - time) % 86400000) % 3600000) / 60000); // minutes
				var sec = (elapseMin - elapseMinR) * 60;

				sec += (duration - Math.round(duration)) * 60;

				var dsec = Math.round(sec) + "";
				if (dsec.length == 1)
					dsec = "0" + dsec;

				$(".time").html((Math.round(duration) + elapseMinR) + ":" + dsec+"");

				$("#Duration").val(Math.round((elapseMin + duration) * 10) / 10);
			}
			$(".time").toggleClass("running", running);
		}, 50);

		function pause() {
			if (running) {
				var curtime = new Date();
				duration += (((curtime - time) % 86400000) % 3600000) / 60000; // minutes
				running = false;
				$("#pause").html("Continue");
			} else {
				running = true;
				time = new Date();

				$("#pause").html("Pause");
			}
		}

		function trash(id) {
			$("[data-model-id='" + id + "']").remove();
			$.ajax("/Log/Delete/" + id);
		}


		$(".js-data-example-ajax").select2({
			ajax: {
				url: "/Account/AdminAllUserLookups",
				dataType: 'json',
				delay: 450,
				data: function (params) {
					return {
						search: params.term,
					};
				},
				processResults: function (data, page) {
					// parse the results into the format expected by Select2.
					// since we are using custom formatting functions we do not need to
					// alter the remote JSON data
					return {
						results: data.results
					};
				},
				cache: true
			},
			escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
			minimumInputLength: 3,
			templateResult: function (d) {
				return "<div class='btn btn-link' style='width: 100%;display: block;text-align:left' onclick='updateUser(this)' data-userid='" + d.value + "' data-email='" + d.text + "' data-name='" + d.name + "' data-organization='" + d.organization + "'>" + d.name + "<div class='pull-right'>(" + d.text + ")</div>" + "</a>";
			}, // omitted for brevity, see the source of this page
			templateSelection: function () {
				return d.value;
			} // omitted for brevity, see the source of this page
		});

		function updateUser(self) {
			$("[name='Name']").val($(self).attr("data-name"));
			$("[name='Email']").val($(self).attr("data-email"));
			$("[name='UserId']").val($(self).attr("data-userid"));
			$("[name='Company']").val($(self).attr("data-organization"));
		}
	</script>
}