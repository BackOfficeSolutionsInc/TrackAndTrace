@model Tuple<List<RadialReview.Models.RockAnswer>, bool>

@using RadialReview.Models.Enums

@if (Model.Item1.Any())
{

	<div class="subsection subsection-rocks">
		<table class="table-gwc">
			<thead>
				<tr>
					<th></th>
					<th style="text-align: center">Complete</th>
					<th class="header"></th>
				</tr>
			</thead>
			<tbody>
				@{
					var questions = Model.Item1.OrderBy(x => x.Askable.GetQuestion()).ToList();
				}
				@for (var i = 0; i < questions.Count(); i++)
				{
					<tr>
						<td style="width:50%"><h4 class="question alignRight" style="padding-right:15px;">@questions[i].Askable.GetQuestion()</h4></td>
						<td>
							<div style="width:240px;text-align: center">
								@if (Model.Item2)
								{
									@Html.EditorFor(x => questions[i].Completion, new { name = "question_" + RadialReview.Models.Enums.QuestionType.Rock + "_" + questions[i].Identifier })
								}
								else
								{
									@Html.DisplayFor(x => questions[i].Completion, new { name = "question_" + RadialReview.Models.Enums.QuestionType.Rock + "_" + questions[i].Identifier })
								}
							</div>
						</td>
						<td style="vertical-align:top;width:50%">
							@if (Model.Item2)
							{
								<textarea name="question_@(QuestionType.Rock)_@(questions[i].Identifier)_Reason" class="full-width changeable reason" placeholder="Add Comment">@questions[i].Reason</textarea>
							}else{
								<div class="full-width changeable reason">@questions[i].Reason</div>
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
		<div class="evaluation-heading">@Html.Organization().Settings.RockName</div>
	</div>
}

