@using RadialReview.Models
@using RadialReview.Models.Enums
@model RadialReview.Controllers.ReviewController.ReviewDetailsViewModel
<div class="rocks-details details">
	@{
		var found = Model.AnswersAbout.Where(x => x is RockAnswer).Cast<RockAnswer>().Where(x => x.Askable.Id == ViewBag.RockId && x.ByUserId == ViewBag.ByUserId);
	//var titleGWC = new Dictionary<string, string> { { "get", "Gets It" }, { "want", "Wants It" }, { "capacity", "Capacity To Do It" } };
	//var lookup = new Dictionary<string, Func<CompanyValueAnswer, Tristate>> { { "get", x => x.Exhibits }, { "want", x => x.WantIt }, { "capacity", x => x.HasCapacity } };

	}

	@if (found.Any())
	{
		<div class="header">
			<span class="fill @found.First().Finished pull-right"></span>
			<span>@found.First().Askable.GetQuestion():</span>
			<span class="extra">@found.First().ByUser.GetName()</span>
		</div>
	
		<div class="alignLeft">
			@if (!String.IsNullOrWhiteSpace(found.First().Reason))
			{
				<div class="reason" style="font-style: italic">
					"@found.First().Reason"
				</div>
			}
			else
			{
				<div class="gray">No reason given.</div>
			}
		</div>

	}
	else
	{
		<div class="gray">No data.</div>
	}
</div>

