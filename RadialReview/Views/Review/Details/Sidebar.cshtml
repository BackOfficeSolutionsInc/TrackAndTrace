@model RadialReview.Controllers.ReviewController.ReviewDetailsViewModel
@using RadialReview.Models;
<!--Sidebar.cshtml-->
<div class="sidebar noPad">
	<div class="sidebar-header" style="padding-left: 20px;">
		<div class="row alignCenter">
			<div class="" style="padding-top: 5px;">
				<span> <div style="font-size:18px">Report Builder</div></span>
			</div>
		</div>
	</div>

	<div class="sidebar-contents">
		@*Charts*@
		<h4 class="alignCenter">Charts</h4>
		<div>
			<span>Include Scatter Chart:</span>
			<input class="pull-right includeScatter" type="checkbox" />
		</div>
		<div>
			<span>Include Evaluation:</span>
			<input class="pull-right includeEvaluation" type="checkbox" />
		</div>
		<div>
			<span>Include Scorecard:</span>
			<input class="pull-right includeScorecard" type="checkbox" />
		</div>
		<div>
			<span>Include Bar Charts:</span>
			<input class="pull-right includeRadios" type="checkbox" />
		</div>
		<hr />
		@*Notes*@
		<h4 class="alignCenter">Notes</h4>
		<div>
			<span>Include Notes:</span>
			<input class="pull-right includeNotes" type="checkbox" />
		</div>
		<hr />
		@*Feedback*@
		@{
			var feedbackGroups = Model.AnswersAbout.Where(x => x is FeedbackAnswer && x.Complete).Cast<FeedbackAnswer>().GroupBy(x => x.Askable.Id).ToList();
		}
		@if (feedbackGroups.Any()) {
			<h4 class="alignCenter">Feedback</h4>
			foreach (var feedbacks in feedbackGroups) {
				<div style="font-weight: bold;">@feedbacks.First().Askable.GetQuestion():</div>
				<ul style="padding-left:10px;" class="noBullet empty" id="feedbacks">
					@foreach (var feedback in feedbacks.GroupBy(x => x.ReviewerUserId + "_" + x.Askable.Id).Select(x => x.First())) {
						var on = Model.Review.ClientReview.FeedbackIds.ToListAlive().FirstOrDefault(x => x.Value == feedback.Id) != null;
						<li class="feedback feedback_@feedback.Id" title="@feedback.Feedback" for="cb_feedback_input_@feedback.Id">
							<span>@feedback.ReviewerUser.GetName()</span>
							<input id="cb_feedback_input_@feedback.Id" class="pull-right feedback_input_@feedback.Id" type="checkbox" @(on ? "checked" : "") onchange="OnclickFeedback(this, @feedback.Id )" />
						</li>
					}
				</ul>
			}
			<hr />
		}


		@{
			var visible = Model.Review.ClientReview.Visible;
		}
		<div class="alignCenter">
			<div class="noPad">
				<input id="Authorize"
					   type="checkbox" @(Model.Review.ClientReview.Visible ? "checked" : "")
					   class="switch switch-large fullWidth"
					   style="min-width:128px;"
					   data-on-color="success"
					   data-off-color="danger"
					   data-on-text="Sharing"
					   data-off-text="Private"
					   data-size="large"
					   data-label-icon="glyphicon glyphicon-chevron-right lightGrayOutlined" />
				<span class="info" title="Set whether employee can view this report."></span>
			</div>
			<div class="smallBreak2"></div>

		</div>
		<div class="alignCenter">
			<div class="btn-group">
				<div onclick="clickDetails()" class="btn btn-default" style="width:72px;">View</div>
				<div onclick="clickPrint()" class="btn btn-default" style="height: 34px;padding: 8px 16px;">
					<span class="glyphicon glyphicon-print pull-right clickable hover"></span>
				</div>
			</div>
			<div class="smallBreak"></div>
		</div>
	</div>
</div>