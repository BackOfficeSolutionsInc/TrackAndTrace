@model RadialReview.Controllers.ReviewController.ReviewDetailsViewModel
@using RadialReview.Models;

@{
    var feedbackGroups = Model.AnswersAbout.Where(x => x is FeedbackAnswer && x.Complete).Cast<FeedbackAnswer>().Where(x=>!String.IsNullOrWhiteSpace(x.Feedback)).GroupBy(x=>x.Askable.Id);
}
<!--Feedback.cshtml-->
@if (feedbackGroups.Any())
{
	foreach (var feedbacks in feedbackGroups){
		<table class="fullWidth table table-hover table-condensed">
			<thead>
				<tr>
					<th colspan="3">@feedbacks.First().Askable.GetQuestion():</th>
					<th class="rightButton alignCenter"><div style="cursor:pointer;font-size:11px;color:#333" onclick="$('.feedback_question_@feedbacks.Key').prop('checked', true);">(all)</div></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var feedback in feedbacks.GroupBy(x => x.ReviewerUserId).Select(x => x.First())) {
					<tr class="feedback feedback_@feedback.Id" @*style="border-bottom: 1px solid #DDD"*@>
						<td style="width:10px;"></td>
						<td style="width: 120px;vertical-align:top;">@feedback.ReviewerUser.GetName():</td>
						<td class="text" style="font-style: italic;white-space: pre-line;">"@feedback.Feedback"</td>
						<td class="alignCenter clickable" style="vertical-align:top">
							@{
								var on = Model.Review.ClientReview.FeedbackIds.ToListAlive().FirstOrDefault(x => x.Value == feedback.Id) != null;
							}
							<input @(on ? "checked" : "") class="feedback_input_@feedback.Id feedback_question_@feedbacks.Key" type="checkbox" onchange=" OnclickFeedback(this, @feedback.Id ) " />


							@*<div onclick="SetFeedback(@feedback.Id)" class="check  @(on?"on":"")">    </div>*@
						</td>
					</tr>
								}
			</tbody>
		</table>
		<br />
	}
}
else
{
    <div class="panel-body gray">
        No feedback has been supplied.
    </div>
}