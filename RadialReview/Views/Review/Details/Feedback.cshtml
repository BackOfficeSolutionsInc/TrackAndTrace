@model RadialReview.Controllers.ReviewController.ReviewDetailsViewModel
@using RadialReview.Models;

@{
    var feedbackGroups = Model.AnswersAbout.Where(x => x is FeedbackAnswer && x.Complete).Cast<FeedbackAnswer>().GroupBy(x=>x.Askable.Id);
}

@if (feedbackGroups.Any())
{
	foreach (var feedbacks in feedbackGroups){
		<table class="fullWidth">
			<tr>
				<th colspan="3">@feedbacks.First().Askable.GetQuestion():</th>
				<th class="rightButton alignCenter">Included</th>
			</tr>
			@foreach (var feedback in feedbacks){
				<tr class="feedback feedback_@feedback.Id" style="border-bottom: 1px solid #DDD">
					<td></td>
					<td style ="width: 120px">@feedback.ByUser.GetName():</td>
					<td class="text" style="font-style: italic;">"@feedback.Feedback"</td>
					<td class="alignCenter clickable">
						@{
							var on = Model.Review.ClientReview.FeedbackIds.ToListAlive().FirstOrDefault(x => x.Value == feedback.Id) != null;
						}
						<input @(on ? "checked" : "") class="feedback_input_@feedback.Id" type="checkbox" onchange=" OnclickFeedback(this, @feedback.Id) " />


						@*<div onclick="SetFeedback(@feedback.Id)" class="check  @(on?"on":"")">    </div>*@
					</td>
				</tr>
			}
		</table>
	}
}
else
{
    <div class="panel-body gray">
        No feedback has been supplied.
    </div>
}