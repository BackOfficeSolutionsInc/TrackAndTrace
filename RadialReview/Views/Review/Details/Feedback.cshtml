@model RadialReview.Controllers.ReviewController.ReviewDetailsViewModel
@using RadialReview.Models;

@{
    var feedbacks = Model.AnswersAbout.Where(x => x is FeedbackAnswer && x.Complete).Cast<FeedbackAnswer>();
}

@if (feedbacks.Count() > 0)
{
    <table class="fullWidth">
        <tr>
            <th></th>
            <th style="width:120px">By</th>
            <th>Feedback</th>
            <th class="rightButton alignCenter">Included</th>
        </tr>
        @foreach (var feedback in feedbacks)
        {
            <tr class="feedback feedback_@feedback.Id" style="border-bottom: 1px solid #DDD">
                <td></td>
                <td>@feedback.ByUser.GetName()</td>
                <td class="text">@feedback.Feedback</td>
                <td class="alignCenter clickable">
                    @{
            var on = Model.Review.ClientReview.FeedbackIds.ToListAlive().FirstOrDefault(x => x.Value == feedback.Id) != null;
                    }
                    <input @(on ? "checked" : "") class="feedback_input_@feedback.Id" type="checkbox" onchange="OnclickFeedback(this,@feedback.Id)" />


                    @*<div onclick="SetFeedback(@feedback.Id)" class="check  @(on?"on":"")">    </div>*@
                </td>
            </tr>
        }
    </table>
}
else
{
    <div class="panel-body gray">
        No feedback has been supplied.
    </div>
}