@model RadialReview.Models.ViewModels.UserOrganizationDetails

@using (Html.BeginStyles()) {
	<style>
		.numbers ul li {
			list-style-type: decimal;
		}
	</style>
}
@{
	var edit = Model.Editable;//Model.User.GetPersonallyManaging() || Model.ManagingOrganization;
}



<div class="revieww">
	<div class="row">
		<div class="col-sm-3">
			@Html.Partial("_User", Model.User)
			<div class="smallBreak"></div>
			<div class="smallBreak"></div>
			@if (edit) {
				<hr />
				<div class="alignCenter">
					<a class="btn btn-link alignCenter" href="/Todo/List/@Model.User.Id">View To-Dos</a>
				</div>
				<div class="smallBreak2"></div>
				<div class="alignCenter">
					<a class="btn btn-link alignCenter" href="/Rocks/Archive/@Model.User.Id">View Archived Rocks</a>
				</div>
				<div class="smallBreak2"></div>
			}
		</div>
		<div class="col-sm-9">
			<div class="panel panel-default">
				@if (edit) {<a class="headerButton clickable" onclick="@Html.ShowModal("Edit Job Description", "/JobDescription/Modal/" + Model.User.Id, "/JobDescription/Modal?refresh=true&silent=true")">Edit</a>}<div class="panel-heading"><h3 class="panel-title">Job Description</h3></div>
				<div class="panel-body" style="white-space: pre-line;">@if (String.IsNullOrWhiteSpace(Model.User.JobDescription)) {<span class="gray">None entered.@if (edit) {<span> Click 'Edit' to add a job description.</span>}</span>} else {if (Model.User.JobDescriptionFromTemplateId.HasValue) {<span class="icon fontastic-icon-link-2 template-link job-description-link" title="This job description was created by a template."></span>}@Model.User.JobDescription}</div>
			</div>
			<div class="panel panel-default">
				@if (edit && Model.CanViewRocks) {
					<a class="headerButton clickable" onclick="@Html.ShowModal("Edit Individual " + @Html.Organization().Settings.RockName, "/Rocks/Modal/" + Model.User.Id, "/Rocks/Modal?refresh=true&silent=true")">Edit</a>
			}
				<div class="panel-heading">
					<h3 class="panel-title">Individual Quarterly @Html.Organization().Settings.RockName</h3>
				</div>
				<div class="panel-body numbers">

					@if (Model.CanViewRocks) {
						if (Model.Rocks.Any()) {
							<!-- Tab panes -->
							<div class="tab-content">
								<ul>
									@foreach (var r in Model.Rocks@*.Where(x => x.Period!=null && x.Period.Id == q.Id)*@) {
										<li class="rock-item" data-id="@r.Id">
											@r.Rock
											@if (r.FromTemplateItemId.HasValue) {
												<span class="icon fontastic-icon-link-2 template-link" title="This was created by a template."></span>
											}
											<span class="pull-right icon fontastic-icon-archive gray clickable" onclick="removeRock(@r.Id)"></span>
										</li>
									}
								</ul>
							</div>
						} else {
							<div class="gray">
								No @Html.Organization().Settings.RockName.
								@if (edit) {
									@:Click 'Edit' to add an individuals @Html.Organization().Settings.RockName.
								 }
							</div>
						}
					} else {
						<div class="gray">
							Cannot view this employee's @Html.Organization().Settings.RockName.
						</div>
					}

				</div>
			</div>

			<div class="panel panel-default">
				@if (edit) {
					<a class="headerButton clickable" onclick="@Html.ShowModal("Edit Roles", "/Roles/Modal/" + Model.User.Id, "/Roles/Modal?refresh=true&silent=true")">Edit</a>
			}
				<div class="panel-heading">
					<h3 class="panel-title">Individual Roles</h3>
				</div>
				<div class="panel-body numbers">
					@if (Model.Roles.Any()) {
						<ul>
							@foreach (var r in Model.Roles.OrderBy(x => x == null ? 0 : (long)x._Attach.Type)) {
								<li class="font-size:19px;">
									@r.Role
									@if (r._Attach != null && r._Attach.Type != RadialReview.Models.Enums.AttachType.User) {
										<span class="icon fontastic-icon-link-2 template-link" title="This role is attached to a @(r._Attach.Type.ToString().ToLower())."></span>
									}
								</li>
							}
						</ul>
					} else {
						<div class="gray">
							No roles.
							@if (edit) {
								@:Click 'Edit' to add a role.
							}
						</div>
					}
				</div>
			</div>

			<div class="panel panel-default">
				@if (edit && Model.CanViewMeasurables) {
					<a class="headerButton clickable" onclick="@Html.ShowModal("Edit Measurables", "/Measurable/Modal/" + Model.User.Id, "/Measurable/Modal?refresh=true&silent=true")">Edit</a>
			}
				<div class="panel-heading">
					<h3 class="panel-title">Scorecard Measurables</h3>
				</div>
				<div class="panel-body numbers">

					@if (Model.CanViewMeasurables) {

						if (Model.Measurables.Any() || Model.AdminMeasurables.Any()) {
							if (Model.Measurables.Any()) {
								<table class="fullWidth">
									<thead>
										<tr>
											<th style="width: 40px;"></th>
											<th>Measurable</th>
											<th style="width: 90px;" class="alignCenter">Weekly Goal</th>
											<th style="width: 160px;" class="alignCenter">Admin</th>
											<th style="width:20px"></th>
										</tr>
									</thead>
									<tbody>
										@{ var i = 1; }
										@foreach (var r in Model.Measurables) {
											<tr>
												<td class="alignRight" style="padding-right: 8px;">@i.</td>
												<td>
													@r.Title
													@if (r.FromTemplateItemId.HasValue) {
														<span class="icon fontastic-icon-link-2 template-link" title="This measurable was created by a template."></span>
													}
												</td>
												<td class="alignCenter">@r.GoalDirection.GetDisplayName() @r.Goal.ToString("0.#####")</td>
												<td class="alignCenter"><a href="/Manage/UserDetails/@r.AdminUserId">@r.AdminUser.NotNull(x => x.GetName())</a></td>
													<td>
														@if (edit && Model.CanViewMeasurables) {
															<span class="glyphicon glyphicon-trash" style="visibility:hidden;"></span>
														}
													</td>
												
											</tr>
											{
												i++;
											}
										}
									</tbody>
								</table>
							}

							if (Model.AdminMeasurables.Any()) {
								<br />
								<table class="fullWidth adminMeasurablesTable">
									<thead>
										<tr>
											<th style="width: 40px;"></th>
											<th>Admin for measurables</th>
											<th style="width: 90px;" class="alignCenter">Weekly Goal</th>
											<th style="width: 160px;" class="alignCenter">Owner</th>
											<th style="width:20px"></th>
										</tr>
									</thead>
									<tbody>
										@{ var i = 1; }
										@foreach (var r in Model.AdminMeasurables) {
											<tr class="measurable_@r.Id">
												<td class="alignRight ids" style="padding-right: 8px;">@i.</td>
												<td>
													@r.Title
													@if (r.FromTemplateItemId.HasValue) {
														<span class="icon fontastic-icon-link-2 template-link" title="This measurable was created by a template."></span>
													}
												</td>
												<td class="alignCenter">@r.GoalDirection.GetDisplayName() @r.Goal.ToString("0.#####")</td>
												<td class="alignCenter"><a href="/Manage/UserDetails/@r.AccountableUserId">@r.AccountableUser.NotNull(x => x.GetName())</a></td>
												<td>
													@if (edit && Model.CanViewMeasurables) {
														<span class="glyphicon glyphicon-trash clickable gray clickable" title="Remove as admin" onclick="removeAdminMeasurables(@r.Id)"></span>

													}
												</td>

											</tr>
											{
												i++;
											}
										}
									</tbody>
								</table>
							}
						} else {
							<div class="gray">
								No measurables.
								@if (edit) {
									@:Click 'Edit' to add a measurable.
								}
							</div>
							}
					} else {
						<div class="gray">
							Cannot view this employee's measurables.
						</div>
					}
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	
	function removeRock(id) {
		$.ajax("/api/v1/rocks/" + id, {
			method: "delete",
			success: function () {
				var parent = $(".rock-item[data-id=" + id + "]").closest("ul");
				$(".rock-item[data-id=" + id + "]").remove();

				if (parent.find("li").length == 0) {
					$(parent).parent().append("<div class='gray'>No Rocks.</div>");
				}
			}
		});
	}

	function removeAdminMeasurables(id) {
		showModal({
			icon: "warning",
			title: "Remove as an admin? The measurable will revert its owner.",
			success: function () {
				$.ajax({
					method: "get",
					url: "/measurable/removeAdmin/" + id,
					success: function (d) {
						$(".measurable_" + id).remove();
						if ($(".adminMeasurablesTable tbody tr").length == 0) {
							$(".adminMeasurablesTable").remove();
						}
						var i = 1;
						$(".adminMeasurablesTable .ids").each(function () {
							$(this).html(i + ".");
							i += 1;
						});
					}
				});
			}
		});		
	}

</script>