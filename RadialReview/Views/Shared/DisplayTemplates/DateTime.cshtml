@model DateTime?

@{
    var guid = "date-"+Guid.NewGuid().ToString();
    //string format=null;
    //if (!string.IsNullOrWhiteSpace(ViewData["format"] as string)) {
    //    format = ViewData["format"] as string;
    //} else { 
    //    var org = Html.Organization();
    //    if (org != null && org.Settings != null) { 
    //        format = org.Settings.GetDateFormat();
    //    } else {
    //        @:<!--Organization Not Loaded, using default format-->
    //    }
    //}
    //format = format ?? "MM-dd-yyyy";

    var jsDate = "new Date()";
    if (Model != null) {
        jsDate = "new Date(" + (Model.Value.Year) + "," + (Model.Value.Month - 1) + "," + Model.Value.Day + "," + Model.Value.Hour + "," + Model.Value.Minute + "," + Model.Value.Second + ")";
    }
    //var generater = new MvcHtmlString("generateDatepicker('." + guid + "'," + jsDate + ",'" + name + "','" + id + "');");  
    
}

@*<div class="input-append date form-group" data-date="@(Model == null ? "" : Model.Value.ToString(format))" data-date-format="@(format.ToLower())">
    @Html.TextBoxFor(x => Model, new { @class = "form-control col-xs-2", id = "Date", name = ViewData["name"]??"Date" })*@
<span class="display-date @guid" id="@guid"><span class="gray">. . .</span></span>
<script type="text/javascript">
    var setValue@(guid.Replace("-","")) = function () {
        var count = count || 0;
        count += 1;
        if (typeof (getFormattedDate) === "undefined" || typeof (window.dateFormat) === "undefined") {
            if (count < 500) {
                setTimeout(setValue@(guid.Replace("-", "")), 10);
            } else {
                document.getElementById("@guid").innerHTML = "Err: No Date Format";
            }
        }else{
            document.getElementById("@guid").innerHTML = (getFormattedDate(@jsDate));
        }
    };
    setValue@(guid.Replace("-",""))();

</script>
    <!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
    @*<span class="add-on"><i class="icon-th"></i></span>
    </div>


    <script>
        $(function () {
            var nowTemp = new Date();
            var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
            $('.@guid').datepickerX({
                format: '@Html.Organization().Settings.GetDateFormat().ToLower()',
                onRender: function (date) {
                    return date.valueOf() <= now.valueOf() ? 'disabled' : '';
                }
            });
        });
    </script>*@
