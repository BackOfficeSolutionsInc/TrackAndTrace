@model RadialReview.Models.Todo.TodoModel

@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.AccountableUserId)

<div class="form-group">
	@*@Html.LabelFor(x => x.Message)*@
	@Html.TextAreaFor(x => x.Message, new { @class = "form-control autoResize", placeholder = "Enter To-do message", autocomplete = "off", disable = ViewBag.CanEdit == false })
</div>
<div class="form-group">
	<iframe src="/Todo/Pad/@Model.Id" width="99.8%"></iframe>
</div>

<div class="row">
	<div class="col-sm-1">
		<div class="form-group">
			<label>Complete:</label>
			<input type="checkbox" @(Model.CompleteTime == null ? "" : "checked") name="completed" style="height: 20px;width: 20px;top: 5px;margin-left: 24px;" />
		</div>
	</div>

	@*@if (ViewBag.PossibleUsers != null) {
			<div class="col-sm-6">
				<div class="form-group">
					@Html.LabelFor(x => x.AccountableUser)
					<select name="@Html.NameFor(x => x.AccountableUser)" class="select-user form-control" style="width: 100%;height:64px;" @(ViewBag.CanEdit == false ? "disable" : "")>
						@foreach (var u in ViewBag.PossibleUsers) {
							<option data-img="@u.imageUrl" value="@u.id" @(Model.AccountableUserId == u.Id ? "selected" : "")>@u.GetName()</option>
					}
					</select>
				</div>
			</div>
		}*@
	<div class="col-sm-5">
		<div class="form-group">
			<label>Due Date:</label>
			@Html.Partial("~/Views/Shared/" + (ViewBag.CanEdit == false ? "DisplayTemplates" : "EditorTemplates") + "/DateTime.cshtml", Model.DueDate,
				new ViewDataDictionary() { { "name", "DueDate" }, { "localize", true } })
		</div>
	</div>
	@if (ViewBag.Originating != null && ViewBag.ShowMeeting == true) {
		@*<div class="row">*@
		<div class="col-sm-5">
			<div class="form-group">
				<label>From:</label>
				@*<div style="font-size: 15px;padding-top: 6px;color: #333;">@ViewBag.Originating</div>*@
				<select name="@Html.NameFor(x => x.ForRecurrenceId)" class="form-control" style="width: 100%;">
					@foreach (var u in ViewBag.PossibleMeetings) {
						<option value="@u.id" @(u.id == Model.ForRecurrenceId ? "selected" : "")>@u.name</option>
				}
				</select>
			</div>
		</div>
		@*</div>*@
	}

</div>


<script>
	//function formatState(state) {
	//	if (!state.id) {
	//		return state.text;
	//	}
	//	var $state = $('<span><img style="max-width:32;max-height:32px" src="' + $(state.element).data("img") + '" class="img-flag" /> ' + state.text + '</span>');
	//	return $state;
	//};

	$(".select-user").select2({
		templateResult: imageListFormat,
		templateSelection: imageListFormat,
	});

	$(".autoResize").autoResize();

	@*var now = new Date();
	now = Date.UTC(now.getYear()+1900, now.getMonth(), now.getDate(),0,0,0);
	$('#TodoDueDate').datepickerX({
	    format: '@Html.Organization().Settings.GetDateFormat().ToLower()',
		onRender: function(date) {
			return date.valueOf() < now.valueOf() ? 'disabled' : '';
		}
	});*@
</script>
