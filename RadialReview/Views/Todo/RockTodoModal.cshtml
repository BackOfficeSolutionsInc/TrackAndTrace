@model RadialReview.Models.Todo.RockTodoVM

@Html.SecuredHiddenFor(x => x.ByUserId)
@Html.SecuredHiddenFor(x => x.MeetingId)
@Html.SecuredHiddenFor(x => x.RockId)
@Html.SecuredHiddenFor(x => x.RecurrenceId)
	
<div class="form-group">
	@Html.LabelFor(x => x.Message)
	@Html.TextBoxFor(x => x.Message, new { @class = "form-control", placeholder = "Enter the To-do", autocomplete = "off" })
</div>
<div class="form-group">
	@Html.LabelFor(x => x.Details)
	@Html.TextAreaFor(x => x.Details, new { @class = "form-control verticalOnly", rows = "6", placeholder = "Enter details (optional)" })
</div>

<div class="row">
	<div class="col-sm-7">
		<div class="form-group">
		@Html.LabelFor(x => x.AccountabilityId)
            <select name="@Html.NameFor(x => x.AccountabilityId)" class="select-user form-control" style="width: 100%;height:64px;" multiple="multiple">
                @foreach (var u in Model.PossibleUsers.OrderBy(x => x.name)) {
                    <option data-img="@u.imageUrl" value="@u.id" value="@u.id" @(Model.AccountabilityId.Any(x => x == u.id) ? "selected" : "")>@u.name</option>
                }
            </select>
		</div>
	</div>
	<div class="col-sm-5">
		<div class="form-group">
			<label>Due Date:</label>
            @Html.Partial("~/Views/Shared/EditorTemplates/DateTime.cshtml", Model.DueDate, new ViewDataDictionary() { { "name", "TodoDueDate" } })


			@*<div class="date" data-date="@Model.DueDate.ToString("MM-dd-yyyy")" data-date-format="mm-dd-yyyy">
				<div class="">
					@Html.TextBox("DueDate", Model.DueDate.ToString("MM-dd-yyyy"), new { @class = "form-control datePicker", id = "TodoDueDate" })
					<!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
				</div>
				<span class="add-on"><i class="icon-th"></i></span>
			</div>*@
		</div>
	</div>
</div>




<script>
	//function formatState(state) {
	//	if (!state.id) {
	//		return state.text;
	//	}
	//	var $state = $('<span><img style="max-width:32;max-height:32px" src="' + $(state.element).data("img") + '" class="img-flag" /> ' + state.text + '</span>');
	//	return $state;
	//};

	$(".select-user").select2({
		templateResult: imageListFormat,
		templateSelection: imageListFormat,
	});

	var now = new Date();
	now = Date.UTC(now.getYear()+1900, now.getMonth(), now.getDate(),0,0,0);
	//$('#TodoDueDate').datepickerX({
	//	format: 'mm-dd-yyyy',
	//	onRender: function(date) {
	//		return date.valueOf() < now.valueOf() ? 'disabled' : '';
	//	}
	//});
</script>