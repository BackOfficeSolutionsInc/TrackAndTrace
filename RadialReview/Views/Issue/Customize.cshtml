@model RadialReview.Models.Reviews.CustomizeModel

<hr />
<h2>Who reviews who?</h2>

@Html.Partial("_Customization",Model)

<hr />
<h2>A few final details:</h2>
<br />

<div class="row">
    <div class="col-md-5 col-md-push-7 ">
        <p class="well">
            Almost finished. We just need to specify a name, when the review period will end, and whether or not to e-mail employees about the new review.
        </p>
    </div>
    <div class="col-md-7 col-md-pull-5 ">
        <div class="row smallBreak2">
            <div class="col-md-6">
                <label class="control-label">Review name:</label>
            </div>
            <div class="col-md-4">
                @Html.TextBox("ReviewName", null, new { @class = "form-control datePicker", id = "ReviewName" })
                <!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
            </div>
        </div>
	    <div class="row smallBreak2">
		    <div class="col-md-6">
			    <label class="control-label">Reviews are due:</label>
		    </div>
		    <div class="col-md-4">
			    <div class="date" data-date="@DateTime.Now.ToString("dd-MM-yyyy")" data-date-format="dd-mm-yyyy">
				    @Html.TextBox("DueDate", null, new { @class = "form-control datePicker", id = "DueDate" })
				    <!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
				    <span class="add-on"><i class="icon-th"></i></span>
			    </div>
		    </div>
	    </div>
		<div class="row smallBreak2">
			<div class="col-md-6" title="Which session is this for?">
				<label class="control-label">This Session:</label>
			</div>
			<div class="col-md-4">
				@Html.DropDownList("SessionId", Model.Periods, new { @class = "form-control SessionForm", id = "SessionId" })
			</div>
		</div>
		<div class="row smallBreak2">
			<div class="col-md-6" title="Which session is next?">
				<label class="control-label">Next Session:</label>
			</div>
			<div class="col-md-4">
				@Html.DropDownList("NextSessionId", Model.Periods, new { @class = "form-control SessionForm", id = "NextSessionId" })
			</div>
		</div>
	    <div class="row smallBreak2">
			<div class="col-md-6" title="Send an email notifying employees of the review.">
				<label class="control-label">Email employees:</label>
			</div>
		    <div class="col-md-4">
			    @Html.CheckBox("SendEmails")
		    </div>
	    </div>
		<div class="row smallBreak2">
			<div class="col-md-6" title="Any feedback given will be anonymous. Only supervisors will be able to see it.">
				<label class="control-label">Anonymous Feedback:</label>
			</div>
			<div class="col-md-4">
				@Html.CheckBox("Anonymous", true)
			</div>
		</div>
    </div>

</div>
<input name="review" value="issueReview" type="hidden">
<button type="submit" id="submitButton" class="btn btn-primary">Issue Review</button>

<script>
    function startCustomize() {
        qtip();
        $('form').unbind('submit');
        $("form").submit(function (event) {
            debugger;
	        $("#submitButton").prop("disabled", true);
            if ($(".customizeBoxes:checked").length == 0) {
                alert("You haven't customized the review. You must ensure that some members review each other.");
                event.preventDefault();
                $("#submitButton").prop("disabled", false);
                return;
            }
            if ($("#ReviewName").val().trim() == "") {
                alert("You must specify a review name.");
                event.preventDefault();
                $("#submitButton").prop("disabled", false);
                return;
            }
            if ($("#DueDate").val().trim() == "") {
                alert("You must specify a due date.");
                event.preventDefault();
                $("#submitButton").prop("disabled", false);
                return;
            }/*
            if ($("#CustomizeDate").val().trim() == "") {
                alert("You must specify a customization due date.");
                event.preventDefault();
                $("#submitButton").prop("disabled", false);
                return;
            }*/

	        debugger;
            if ($("#SessionId").val() == -3) {
            	alert("You must specify this session.");
            	event.preventDefault();
            	$("#submitButton").prop("disabled", false);
            	return;
            }
            if ($("#NextSessionId").val() == -3) {
            	alert("You must specify the next session.");
            	event.preventDefault();
            	$("#submitButton").prop("disabled", false);
            	return;
            }

            return;
        });

		function showPeriodModal(that) {
			showModal("Add Session", "/Period/Modal/0", "/Period/Modal", null, null, function (data) {
				debugger;
				$(".SessionForm").append("<option value='" + data.Object.Id + "'>" + data.Object.Name + "</option>");
				$(that).val(data.Object.Id);
			});
		}

		$(".SessionForm").click(function() {
			var that = $(this);
			if ($(this).val() == -3 && $(this).find("option").length == 1) {
				showPeriodModal(that);
			}
	    });
        $(".SessionForm").change(function () {
	        var that = $(this);
        	if ($(this).val() == -3) {
		        showPeriodModal(that);
	        }
        });


        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
        debugger;
        var checkout = $('#DueDate').datepicker({
            format: 'mm-dd-yyyy',
            onRender: function (date) {
                return date.valueOf() <= now.valueOf() ? 'disabled' : '';
            },

        });
    }

    /*
    function SelfSelect() {
        $(".isSelf input").prop("checked", true);
        updateAll();
    }
    function ManagersSelect() {
        $(".isManager input").prop("checked", true);
        updateAll();
    }
    function SubordinatesSelect() {
        $(".isSubordinate input").prop("checked", true);
        updateAll();
    }
    function TeammatesSelect() {
        $(".isTeammate input").prop("checked", true);
        updateAll();
    }
    function PeersSelect() {
        $(".isPeer input").prop("checked", true);
        updateAll();
    }*/
</script>

<img src="~/Content/img/blank.gif" onload="startCustomize()" />
