@model RadialReview.Controllers.IssueController.IssueOptions

<hr />
<h2>A few final details:</h2>
<br />
<div class="row">
	<div class="col-md-5 col-md-push-7 ">
		<p class="well">
			Great! Managers will need some time to customize the reviews. During this pre-@Html.ReviewName().ToLower() period, supervisors will be able to customize who their direct reports review.
			Please specify when you want the prereview period to end. Afterwards, please specify when you want employees to be finished with their reviews.
			<br />
			The @Html.ReviewName().ToLower() will automatically be generated after the pre-@Html.ReviewName().ToLower() deadline.
		</p>
	</div>
	<div class="col-md-7 col-md-pull-5 ">
		<div class="row smallBreak2">
			<div class="col-md-6">
				<label class="control-label">@Html.ReviewName() name:</label>
			</div>
			<div class="col-md-4">
				@Html.TextBox("ReviewName", null, new { @class = "form-control datePicker", id = "ReviewName" })
				<!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
			</div>
		</div>
		<div class="row smallBreak2">
			<div class="col-md-6">
				<label class="control-label">Manager pre-@Html.ReviewName().ToLower() due:</label>
			</div>
			<div class="col-md-4">
				<div class="date" data-date="@DateTime.Now.ToString("MM-dd-yyyy")" data-date-format="mm-dd-yyyy">
					<div class="">
						@Html.TextBox("PrereviewDate", null, new { @class = "form-control datePicker", id = "PrereviewDate" })
						<!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
					</div>
					<span class="add-on"><i class="icon-th"></i></span>
				</div>
			</div>
		</div>
		<div class="row smallBreak2">
			<div class="col-md-6">
				<label class="control-label ">@Html.ReviewName()s are due:</label>
			</div>
			<div class="col-md-4 alignCenter">
				<div class="date" data-date="@DateTime.Now.ToString("MM-dd-yyyy")" data-date-format="mm-dd-yyyy">
					<div class="">
						@Html.TextBox("DueDate", null, new { @class = "form-control datePicker", id = "DueDate" })
						<!--input name="date" id="date" class="form-control col-xs-2" size="30" type="text" value=""-->
					</div>
					<span class="add-on"><i class="icon-th"></i></span>
				</div>
			</div>
		</div>
		<div class="row smallBreak2">
			<div class="col-md-6" title="Which session is this for?">
				<label class="control-label">This Session:</label>
			</div>
			<div class="col-md-4">
				@Html.DropDownList("SessionId", Model.Periods, new { @class = "form-control SessionForm", id = "SessionId" })
			</div>
		</div>
		
		<div class="row smallBreak2">
			<div class="col-md-6" title="Which session is next?">
				<label class="control-label">Next Session:</label>
			</div>
			<div class="col-md-4">
				@Html.DropDownList("NextSessionId", Model.Periods, new { @class = "form-control SessionForm", id = "NextSessionId" })
			</div>
		</div>
		<div class="row smallBreak2">

			<div class="col-md-6" title="Any @Html.ReviewName().ToLower()s resulting from supervisors that do not customize their pre-@Html.ReviewName().ToLower() will automatically be populated with a default @Html.ReviewName().ToLower() group consisting of themselves and thier peers, supervisors, and teammates.">
				<label class="control-label">Ensure default:</label>
			</div>
			<div class="col-md-4">
				@Html.CheckBox("EnsureDefault", true)
			</div>
		</div>
		<div class="row smallBreak2">
			<div class="col-md-6" title="Any feedback given will be anonymous. Only supervisors will be able to see it.">
				<label class="control-label">Anonymous Feedback:</label>
			</div>
			<div class="col-md-4">
				@Html.CheckBox("Anonymous", true)
			</div>
		</div>
		@*<div class="row smallBreak2">
				<div class="col-md-6">
					<label class="control-label">Email employees:</label>
				</div>
				<div class="col-md-4">
					@Html.CheckBox("SendEmails")
				</div>
			</div>*@
	</div>
</div>
<input name="review" value="issuePrereview" type="hidden">
<button type="submit" id="submitButton" class="btn btn-primary">Begin Pre-@Html.ReviewName()</button>

<img src="~/Content/img/blank.gif" onload="startIssueOrg()" />
<script>
	function startIssueOrg() {
		$("form").unbind("submit");
		$("form").submit(function (event) {
			//event.preventDefault();

			issuing = true;
			$("#submitButton").prop("disabled", true);
			if ($("#ReviewName").val().trim() == "") {
				alert("You must specify a @Html.ReviewName().ToLower() name.");
				event.preventDefault();
				$("#submitButton").prop("disabled", false);
				return;
			}
			if ($("#DueDate").val().trim() == "") {
				alert("You must specify a due date.");
				event.preventDefault();
				$("#submitButton").prop("disabled", false);
				return;
			}
			if ($("#PrereviewDate").val().trim() == "") {
				alert("You must specify a customization due date.");
				event.preventDefault();
				$("#submitButton").prop("disabled", false);
				return;
			}
			if ($("#SessionId").val() == -3) {
				alert("You must specify this session.");
				event.preventDefault();
				$("#submitButton").prop("disabled", false);
				return;
			}
			if ($("#NextSessionId").val() == -3) {
				alert("You must specify the next session.");
				event.preventDefault();
				$("#submitButton").prop("disabled", false);
				return;
			}
			///$("form").submit();
			//issuing = false;
			//window.location = "/Reviews/Index";


			return;
		});

		qtip();


		function showPeriodModal(that) {
			showModal("Add Session", "/Period/Modal/0", "/Period/Modal", null, null, function (data) {
				$(".SessionForm").append("<option value='" + data.Object.Id + "'>" + data.Object.Name + "</option>");
				$(that).val(data.Object.Id);
			});
		}

		$(".SessionForm").click(function () {
			var that = $(this);
			if ($(this).val() == -3 && $(this).find("option").length == 1) {
				showPeriodModal(that);
			}
		});
		$(".SessionForm").change(function () {
			var that = $(this);
			if ($(this).val() == -3) {
				showPeriodModal(that);
			}
		});

		var nowTemp = new Date();
		var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);

		var checkin = $('#PrereviewDate').datepickerX({
			format: 'mm-dd-yyyy',
			onRender: function (date) {
				return date.valueOf() < now.valueOf() ? 'disabled' : '';
			}
		}).on('changeDate', function (ev) {
			if (ev.date.valueOf() > checkout.date.valueOf()) {
				var newDate = new Date(ev.date)
				newDate.setDate(newDate.getDate() + 7);
				checkout.setValue(newDate);
			}
			checkin.hide();
			$('#DueDate')[0].focus();
		}).data('datepicker');

		var checkout = $('#DueDate').datepickerX({
			format: 'mm-dd-yyyy',
			onRender: function (date) {
				return date.valueOf() <= checkin.date.valueOf() ? 'disabled' : '';
			}
		}).on('changeDate', function (ev) {
			checkout.hide();
		}).data('datepicker');
	}

</script>
