@model long
@{
    ViewBag.Title = "Tree";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div id="Chart"></div>

@using (Html.BeginStyles())
{
    <style>
        .node circle {
            fill: #fff;
            stroke: steelblue;
            stroke-width: 1.5px;
        }

        .node {
            font: 10px sans-serif;
        }

        .link {
            fill: none;
            stroke: #ccc;
            stroke-width: 1.5px;
        }
    </style>
}


@using (Html.BeginScripts())
{
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>
        var width = 960,
            height = 500;

        var tree = d3.layout.tree()
            .size([height, width - 250]);

        var diagonal = d3.svg.diagonal()
            .projection(function (d) { return [d.y, d.x]; });

        var svg = d3.select("#Chart").append("svg")
            .attr("width", width)
            .attr("height", height)
          .append("g")
            .attr("transform", "translate(100,0)");

        d3.json("/Data/OrganizationHierarchy/@Model", function (error, json) {
            var nodes = tree.nodes(json),
                links = tree.links(nodes);

            var link = svg.selectAll("path.link")
                .data(links)
              .enter().append("path")
                .attr("class", "link")
                .attr("d", diagonal);

            var node = svg.selectAll("g.node")
                .data(nodes)
              .enter().append("g")
                .attr("class", "node")
                .attr("transform", function (d) { return "translate(" + d.y + "," + d.x + ")"; })

            node.append("a")
                .attr("xlink:href", function (d) { return "/User/Details/" + d.id })
                .append("circle")
                .attr("r", 4.5);

            var box = node.append("a")
                .attr("xlink:href", function (d) { return "/User/Details/" + d.id })
                .append("g")
                .attr("transform", function (d) { return "translate(0,-30)"; });

            box.append("text")
                .attr("dx", function (d) { return d.children ? -0 : 0; })
                .attr("dy", 3)
                .attr("text-anchor", function (d) { return d.children ? "end" : "start"; })
                .text(function (d) { return d.name; })
                .style("font-size", "14px")
                .style("text-anchor", "middle");

            box.append("text")
                .attr("dx", function (d) { return d.children ? -0 : 0; })
                .attr("dy", 18)
                .attr("text-anchor", function (d) { return d.children ? "end" : "start"; })
                .text(function (d) { return d.subtext; })
                .style("font-size", "12px")
                .style("fill", "gray")
                .style("text-anchor", "middle");
        });

        d3.select(self.frameElement).style("height", height + "px");

    </script>
}
