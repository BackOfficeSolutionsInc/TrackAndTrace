@model RadialReview.Models.OrgCreationData

@{
	ViewBag.Title = RadialReview.Properties.DisplayNameStrings.createOrganization;
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
	<div class="col-md-12">
		<div class="container">

			@Html.ValidationSummary()

			@using (Html.BeginForm()) {
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true)

				<div class="panel panel-primary">
					<div class="panel-heading">
						Create Organization
					</div>
					<div class="panel-body form-horizontal">

						<div class="form-group">
							<label class="col-sm-2 control-label" for="name">Organization Name</label>
							<div class="col-sm-10">
								@Html.TextBoxFor(x => x.Name, new { @class = "form-control", placeholder = "Organization Name" })
							</div>
						</div>
						<div class="row">
							<div class="col-sm-6">
								<div class="form-group">
									<label class="col-sm-4 control-label" for="name">Account Type</label>
									<div class="col-sm-8">
										@Html.EnumDropDownListFor(x => x.AccountType, new { @class = "form-control accType" })
									</div>
								</div>
								<div class="form-group">
									<label class="col-sm-4 control-label" for="name">Referral Source</label>
									<div class="col-sm-8">
										@Html.DropDownListFor(x => x.ReferralSource, (IEnumerable<SelectListItem>)ViewBag.Campaigns, new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group">
									<label class="col-sm-4 control-label" for="name">Assigned To</label>
									<div class="col-sm-8">
										@Html.DropDownListFor(x => x.AssignedTo, (IEnumerable<SelectListItem>)ViewBag.SupportTeam, new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group trialEnd">
									<label class="col-sm-4 control-label" for="name">Trial Ends</label>
									<div class="col-sm-6">
										@Html.EditorFor(x => x.TrialEnd, new { startDate = DateTime.UtcNow.Date })
										@*@Html.DropDownListFor(x => x.AssignedTo, (IEnumerable<SelectListItem>)ViewBag.SupportTeam, new { @class = "form-control" })*@
									</div>
									<div class="col-sm-2">
										<span class="numDays">30 days</span>
									</div>
								</div>
							</div>
							<div class="col-sm-6">
								<div class="form-group">
									<div class="col-sm-offset-4 col-sm-8">
										<div class="checkbox">
											<label>
												@Html.CheckBoxFor(x => x.EnableL10) Enable L10
											</label>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-sm-offset-4 col-sm-8">
										<div class="checkbox">
											<label>
												@Html.CheckBoxFor(x => x.EnableAC) Enable Accountability Chart
											</label>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-sm-offset-4 col-sm-8">
										<div class="checkbox">
											<label>
												@Html.CheckBoxFor(x => x.EnablePeople) Enable People Tools
											</label>
										</div>
									</div>
								</div>
								<div class="form-group">
									<div class="col-sm-offset-4 col-sm-8">
										<div class="checkbox">
											<label>
												@Html.CheckBoxFor(x => x.EnableReview) Enable Old Review Software
											</label>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="panel panel-primary">
					<div class="panel-heading">
						Primary Contact
					</div>
					<div class="panel-body form-horizontal">

						<div class="form-group">
							<label class="col-sm-2 control-label" for="contactFN">Name</label>
							<div class="col-sm-5">
								@Html.TextBoxFor(x => x.ContactFN, new { @class = "form-control", placeholder = "First name" })
							</div>
							@*</div>

								<div class="form-group">*@
							<div class="col-sm-5">
								@Html.TextBoxFor(x => x.ContactLN, new { @class = "form-control", placeholder = "Last name" })
							</div>
						</div>

						<div class="form-group">
							<label class="col-sm-2 control-label" for="contactEmail">Email</label>
							<div class="col-sm-10">
								@Html.TextBoxFor(x => x.ContactEmail, new { @class = "form-control", placeholder = "Email" })
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label" for="contactEmail">User Type</label>
							<div class="col-sm-10">
								@Html.EnumDropDownListFor(x => x.ContactEosUserType, new { @class = "form-control eosUserType" })
							</div>
						</div>
						<div class="form-group">
							<label class="col-sm-2 control-label" for="contactEmail">Position</label>
							<div class="col-sm-10">
								@Html.TextBoxFor(x => x.ContactPosition, new { @class = "form-control contactPosition", placeholder = "Position (optional)" })
							</div>
						</div>

					</div>
				</div>

				<div class="panel panel-primary">
					<div class="panel-heading">
						Implementer/Coach
					</div>
					<div class="panel-body form-horizontal">
						<div class="form-group">
							<label class="col-sm-2 control-label" for="implementer">Has Coach</label>
							<div class="col-sm-10">
								@Html.EnumDropDownListFor(x => x.HasCoach, new { @class = "form-control coach-control", style = "width:calc(100% - 100px)" })
							</div>
						</div>
						@*<div class="form-group has-coach hidden">
								<label class="col-sm-2 control-label" for="implementer">Coach Type</label>
								<div class="col-sm-10">
									@Html.EnumDropDownListFor(x => x.CoachType, new { @class = "form-control", style = "width:calc(100% - 100px)" })
								</div>
							</div>*@
						<div class="form-group has-coach hidden">
							<label class="col-sm-2 control-label" for="implementer">Coach</label>
							<div class="col-sm-10">
								<span class="clickable" style="font-size:90%;float:right" onclick="@Html.ShowModal("Add","/admin/editimplementers","/admin/editimplementers",onCompleteFunction:"addToList")">Add coach</span>
								@Html.DropDownListFor(x => x.CoachId, ((IEnumerable<SelectListItem>)ViewBag.Implementers).ToList(), new { @class = "form-control implementerList", style = "width:calc(100% - 100px)" })
							</div>
						</div>
					</div>
				</div>

				<div class="alignCenter">
					<button class="btn btn-success">@RadialReview.Properties.DisplayNameStrings.create</button>
				</div>


				@*<fieldset class="form-horizontal">
						<div class="control-group">
							@Html.LabelFor(model => model.Name, new { @class = "control-label" })
							<div class="controls">

								<div class="input-group">
									@Html.EditorFor(model => model.Name, new { @class = "form-control" })
									<span class="input-group-btn">
										<button class="btn btn-default" type="submit">Go!</button>
									</span>
								</div>
							</div>
						</div>
					</fieldset>*@
			}
		</div>

	</div>
</div>
@using (Html.BeginScripts()) {
	<script>
		function addToList(res) {
			var data = res.Object;

			$(".implementerList").append("<option value='" + data.Id + "'>" + data.Name + "</option>")
			$(".implementerList").val(data.Id);
		}

		$(".coach-control").on("change", function () {
			var isYes = $(this).val() == 1;
			$(".has-coach").toggleClass("hidden", !isYes);
		});

		$(".eosUserType").on("change", function () {
			debugger;
			if ($(".contactPosition").val() == "") {
				$(".contactPosition").val($(".eosUserType option:selected").text());
			}
		});
		$(".accType").on("change", function () {
			var isTrial = $(".accType").find(":selected").html() == "Trial";
			$(".trialEnd").toggleClass("hidden", !isTrial);
		});

		$(document).ready(function () {
			setTimeout(function () {
				$("#TrialEnd").on("change", function (data) {
					console.log(data);
					var today = new Date();
					var trialEnd = new Date($(this).val());

					var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
					var diffDays = Math.ceil(((trialEnd.getTime() - today.getTime()) / (oneDay)));
					$(".numDays").html(diffDays + " days");
				});
			}, 1000);
		});

		$("form").on("submit", function () {
			$("button").prop("disabled");
			$("button").addClass("disabled");
			$(this).append("working...");
			$("button").remove();
		});

	</script>
}