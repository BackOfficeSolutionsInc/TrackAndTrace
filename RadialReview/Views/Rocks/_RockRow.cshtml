@using RadialReview.Models
@model RadialReview.Models.Askables.RockModel
@{
	var guid = Guid.NewGuid().ToString().Replace("-","");

	var lockedClass = Model.FromTemplateItemId.HasValue ? "disable unlockRR-" + guid : " unlockRR-" + guid;
}
<div class="roleRow">
	@using (Html.BeginCollectionItem("Rocks"))
	{
		<div class="roww">
			<div style="width:calc( 100% - 52px );display:inline-block">
				@Html.HiddenFor(x => x.Id)
				@Html.TextBoxFor(x => x.Rock, new { @class = "form-control roleItem " + lockedClass })
				@Html.HiddenFor(x => x.DeleteTime)
				@Html.HiddenFor(x => x.CreateTime)
				@Html.HiddenFor(x => x.CompleteTime)
				@Html.HiddenFor(x => x.FromTemplateItemId,new{@class="templateId "+lockedClass})
			</div>
			
			@if (ViewBag.HideDelete == null || ViewBag.HideDelete == false)
			{
				<span style="padding-left: 8px;" class="glyphicon glyphicon-trash deleteRow clickable @lockedClass" title="Delete"></span>
			}
			@if (Model.FromTemplateItemId != null)
			{
				<span style="padding-left: 8px;" class="icon fontastic-icon-link-broken lock" onclick="$('.unlockRR-@guid').removeClass('disable');$(this).remove();$('.templateId.unlockRR-@guid').prop('value',false);" title="This was created by a template. Click to disassociate."></span>
			}
		</div>

		<div class="lineAfter @(ViewBag.HidePeriod ?? false ? "hidden" : "")" style="width:calc( 100% - 52px );display:inline-block">
			@Html.DropDownListFor(x => x.PeriodId, (IEnumerable<SelectListItem>)ViewBag.Periods, new { @class = "form-control " + lockedClass })
		</div>
		if (ViewBag.PossibleUsers != null)
		{
			<div class="lineAfter" style="width: calc(100% - 52px); display: inline-block">
				@*<select name="@Html.NameFor(x => x.ForUserId)" class="select-user form-control user-@guid" style="width: 100%; height: 64px;">
					@foreach (var u in (IEnumerable<UserOrganizationModel>)ViewBag.PossibleUsers)
					{
						<option data-img="@u.ImageUrl(true, ImageSize._32)" value="@u.Id" @(u.Id==Model.ForUserId?"selected":"")>@u.GetName()</option>
					}
				</select>*@
				@Html.DropDownListFor(x=>x.ForUserId,((IEnumerable<UserOrganizationModel>)ViewBag.PossibleUsers).ToSelectList(x=>x.GetNameAndTitle(),x=>x.Id),
				new { @class = "form-control " + lockedClass+ " "+((Model.FromTemplateItemId != null)?"disabled":""), style = "width: 100%;"})
			</div>
		}
		else
		{
			@Html.HiddenFor(x => x.ForUserId)
		}
	}
	<div class="smallBreak"></div>
	<div class="smallBreak"></div>
	@if (!(ViewBag.HidePeriod ?? false) || ViewBag.PossibleUsers != null)
	{
		<hr />
	}
</div>


@*@if (ViewBag.PossibleUsers != null)
{
	<script>
		$(".user-@guid").select2({
			templateResult: formatState,
			templateSelection: formatState
		});
	</script>
}*@