@using RadialReview.Models
@model RadialReview.Models.ViewModels.OrganizationViewModel
@{
	ViewBag.Title = "Advanced";
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Page = "Advanced";
	var showExtra_freeusers = false;
}

@section top{
	<div class="jumbotron">
		<h1>Manage</h1>
	</div>
}

@section header{
	@Html.Partial("Partial/manageheader")
}
<br />

@{
	var l10Enabled = Html.Organization().Settings.EnableL10;
	var reviewedEnabled = Html.Organization().Settings.EnableReview;
	var surveyEnabled = Html.Organization().Settings.EnableSurvey;
	var isImplementer = Html.Organization().AccountType == RadialReview.Models.Enums.AccountType.Implementer;
}



<div class="panel panel-primary traction-library">
	<div class="panel-heading">Traction Library Books</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-sm-6 ">
				<div class="thumbnail" style="border:none;">
					<img src="https://s3.amazonaws.com/Radial/base/Pictures/bookssmall.png" alt="The Traction Library">
				</div>
			</div>
			<div class="col-sm-6">
				<div class="well" style="">
					<h4>THE TRACTION<sup>®</sup> LIBRARY</h4>
					Need to more books for your team?<br />
					Want to introduce EOS to your local business community?<br />
					Looking for the perfect thank you gift?<br />
				</div>
				<div class="alignCenter">
					<a href="/Redirect/BuyBooks" class="btn btn-info btn-invert" style="color:white">Buy books here!</a>
				</div>
				<br />
			</div>
			@*<div class="disclaimer"><i>*Bulk discounts are available!</i></div>*@
		</div>
	</div>
</div>

<div class="panel panel-primary">
	<div class="panel-heading">Data</div>
	<div class="panel-body">
		<a class="btn btn-default" href="/rocks/listing">All rocks</a>
		<a class="btn btn-default" href="/scorecard/listing">All scorecards</a>
		<a class="btn btn-default" href="/todo/listing">All to-dos</a>
		@*<a class="btn btn-default" href="/issues/listing">All issues</a>*@
		<div class="btn-group">
			<a type="button" class="btn btn-default" href="/issues/listing">All issues</a>
			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				<span class="caret"></span>
				<span class="sr-only">Toggle Dropdown</span>
			</button>
			<ul class="dropdown-menu">
				<li><a href="/issues/listing">All Issues</a></li>
				<li class="shift-hidden"><a href="/issues/issuesandtodos">All Issues and their Context-Aware To-dos™</a></li>
				<li class="shift-visible"><a href="/issues/issuesandtodos?details=true">All Issues and their Context-Aware To-dos™ <small class="gray"> (and notes)</small></a></li>
			</ul>
		</div>

		<a class="btn btn-default pull-right" href="/data/dashboard">Account Statistics</a>
	</div>
</div>

<div class="panel panel-primary">
	<div class="panel-heading">Archives</div>
	<div class="panel-body">
		<a class="btn btn-default" href="/archive/users">Deleted Users</a>
	</div>
</div>

@using (var f = Html.BeginForm("Advanced", "Manage", FormMethod.Post)) {
	@Html.HiddenFor(x => x.Id)

	<div class="panel panel-primary">
		<div class="panel-heading">
			Settings:
			@*<h3 class="panel-title"></h3>*@
		</div>
		<div class="panel-body">

			<div class="form-group">
				<div class="row smallBreak2">
					<label class="col-xs-5  ttt control-label">Organization name:</label>
					<div class="col-xs-3">
						@Html.TextBoxFor(x => x.OrganizationName, new { @class = "form-control", placeholder = "Organization name" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Edit organization hierarchy:</label>
					</div>
					<div class="col-xs-3">
						<div class="pull-left">
							@{
								Html.RenderAction("Dropdown", "Permissions", new { id = Model.AccountabilityChartId, type = PermItem.ResourceType.AccountabilityHierarchy, buttonClass = "btn-xs" });
							}<abbr class="info" title="Who can reorganize the organization's hierarchy. Managers can edit those below them."></abbr>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Upgrade users:</label>
					</div>
					<div class="col-xs-3">
						<div class="pull-left">
							@{
								Html.RenderAction("Dropdown", "Permissions", new { id = Model.Id, type = PermItem.ResourceType.UpgradeUsersForOrganization, buttonClass = "btn-xs" });
							}<abbr class="info" title="Who can upgrade users."></abbr>
						</div>
					</div>
				</div>
				@*<div class="row ">
						<label class="col-xs-5  ttt control-label">Quarterly Goals are called:</label>
						<div class="col-xs-3">
							@Html.TextBoxFor(x => x.RockName, new { @class = "form-control", placeholder = "Quarterly goal name" })
						</div>
					</div>*@
				@Html.HiddenFor(x => x.RockName)

				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Managers have admin ability:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.ManagersCanEdit, new { @class = "checkbox cb-managers-edit", onclick = "managersEdit()" })
					</div>
				</div>

				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Managers only see @Html.Organization().Settings.RockName and Measurables under them:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.OnlySeeRockAndScorecardBelowYou, new { @class = "checkbox" })
					</div>
				</div>
				@*<div class="row">
						<div class="col-xs-5  ttt">
							<label class="control-label">Strict hierarchy:</label>
						</div>
						<div class="col-xs-3">
							@Html.CheckBoxFor(x => x.StrictHierarchy, new { @class = "checkbox" })
						</div>
					</div>*@

				@Html.HiddenFor(x => x.StrictHierarchy)

				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">@RadialReview.Utilities.Config.ManagerName()s can edit their accountabilities:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.ManagersCanEditSelf, new { @class = "checkbox" })
					</div>
				</div>

				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Employees can edit their accountabilities:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.EmployeesCanEditSelf, new { @class = "checkbox" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">@RadialReview.Utilities.Config.ManagerName()s can remove users:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.ManagersCanRemoveUsers, new { @class = "checkbox" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">@RadialReview.Utilities.Config.ManagerName()s can edit positions:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.ManagersCanEditPositions, new { @class = "checkbox" })
					</div>
				</div><div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Allow adding clients as users:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.AllowAddClient, new { @class = "checkbox" })
					</div>
				</div>

				@if (ViewBag.ShowReview) {
					<div class="row">
						<div class="col-xs-5  ttt">
							<label class="control-label">Limited granularity on evals for GWC: </label>
						</div>
						<div class="col-xs-3">
							@Html.CheckBoxFor(x => x.LimitFiveState, new { @class = "checkbox inlineBlock" })
							<abbr style="top: -5px;position: relative;" class="info" title="When checked, users evaluate GWC with Yes and No. Unchecked, users evaluated with Always, Mostly, Rarely and Never"></abbr>
						</div>
					</div>

				} else {
					@Html.HiddenFor(x => x.LimitFiveState)
				}

				@if (ViewBag.ShowSurvey == true) {
					<div class="row">
						<div class="col-xs-5  ttt">
							<label class="control-label">@RadialReview.Utilities.Config.ManagerName()s can create survey:</label>
						</div>
						<div class="col-xs-3">
							@Html.CheckBoxFor(x => x.ManagersCanCreateSurvey, new { @class = "checkbox" })
						</div>
					</div>

					<div class="row">
						<div class="col-xs-5  ttt">
							<label class="control-label">Employees can create survey:</label>
						</div>
						<div class="col-xs-3">
							@Html.CheckBoxFor(x => x.EmployeesCanCreateSurvey, new { @class = "checkbox" })
						</div>
					</div>
				}
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Send email invitations by default:</label>
					</div>
					<div class="col-xs-3">
						@Html.CheckBoxFor(x => x.SendEmailImmediately, new { @class = "checkbox" })
					</div>
				</div>

				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Time-zone:</label>
					</div>
					<div class="col-xs-3">
						@Html.DropDownListFor(x => x.TimeZone, Model.TimeZones, new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Week start:</label>
					</div>
					<div class="col-xs-3">
						@Html.EnumDropDownListFor(x => x.WeekStart, new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Date Format:</label>
					</div>
					<div class="col-xs-3">
						@Html.DropDownListFor(x => x.DateFormat, new[] { "MM-dd-yyyy", "dd-MM-yyyy" }.ToSelectList(x => x.ToLower(), x => x), new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Number Format:</label>
					</div>
					<div class="col-xs-3">
						@Html.DropDownListFor(x => x.NumberFormat, NumberFormatExtensions.Formats(), new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Default Time to send To-do Email:</label>
					</div>
					<div class="col-xs-3">
						@Html.DropDownListFor(x => x.DefaultSendTodoTime, Model.PossibleTodoTimes, new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Year Start:</label>
					</div>
					<div class="col-xs-3">
						@Html.EnumDropDownListFor(x => x.StartOfYearMonth, new { @class = "form-control" })
					</div>
					<div class="col-xs-3">
						@Html.EnumDropDownListFor(x => x.StartOfYearOffset, new { @class = "form-control" })
					</div>
				</div>
				<div class="row">
					<div class="col-xs-5  ttt">
						<label class="control-label">Scorecard Period:</label>
					</div>
					<div class="col-xs-3">
						@Html.EnumDropDownListFor(x => x.ScorecardPeriod, new { @class = "form-control" })
					</div>
				</div>
				<br />
				<div class="form-group">
					<div class="col-lg-offset-5 col-lg-3">
						<button type="submit" class="btn btn-primary">Save</button>
					</div>
				</div>
			</div>
		</div>
	</div>
								
}



@using (Html.BeginStyles()) {
	<style>
		.enabled {
			font-size: 75%;
		}

		.price {
			font-size: 100%;
		}

		.payment {
			font-size: 110%;
		}

			.payment tbody td, .payment tbody th {
				padding-top: 0 !important;
				padding-bottom: 0 !important;
			}

		.price-ending {
			font-size: 80%;
		}

		.ttt {
			text-align: right;
		}
	</style>

	@Styles.Render("~/Content/ManageCSS")
}
@using (Html.BeginScripts()) {
	<script>
		function managersEdit() {
			var newStatus = $(".cb-managers-edit").is(":checked");
			if (newStatus == true) {
				showModal({
					icon: "warning",
					title: "This gives supervisors all admin abilities. Are you sure you want to do this?",
					success: function () {

					},
					cancel: function () {
						$(".cb-managers-edit").prop("checked", false);
					}
				});
			}
		}
	</script>
}
