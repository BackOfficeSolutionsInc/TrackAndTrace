@model RadialReview.Models.ViewModels.OrgMembersViewModel

@{
	ViewBag.Title = "Members";
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Page = "Members";
}

@section top{
	<div class="jumbotron">
		<h1>Manage</h1>
	</div>
}

@section header{
	@Html.Partial("Partial/manageheader")
}

@section hints{
	@Html.AlertBoxDismissable(@"From this page you can add employees to your organization.
            Employees are assigned questions that evaluate how they are doing in the organization.
            These can be questions unique to the individual or shared with their teams, positions, or the company as a whole.
            During the review process, peers, teammates, supervisors and direct reports answer questions of the employee to gauge how well they are fulfilling their responsibilities.
            To begin, click the Add button. You can come back to this any time.", "alert-info", "Info:")
}

@using (Html.BeginStyles()) {
	<style>
		tr.managing {
		}

		tr.notManaging {
			background-color: #F1F1F1;
		}

		.viewEdit {
			opacity: .1;
		}

		span:hover .viewEdit {
			opacity: 1;
		}

		.filter-table .quick {
			margin-left: 0.5em;
			font-size: 0.8em;
			text-decoration: none;
		}

		.fitler-table .quick:hover {
			text-decoration: underline;
		}

		td.alt {
			background-color: #ffc;
			background-color: rgba(255, 255, 0, 0.2);
		}
	</style>
}

@using (Html.BeginScripts()) {
	<script src="~/Scripts/jquery/jquery.tablesorter.js"></script>
	<script src="~/Scripts/jquery/jquery.filtertable.min.js"></script>
	<script>

		function SendEmails() {
			$("#sendButton").prop("disabled", true);
			$.ajax({
				url: "/Nexus/SendAllEmails",
				success: function (data) {
					StoreJsonAlert(data);
					location.reload();
				}
			});
		}

		function ResendEmails() {
			$("#resendButton").prop("disabled", true);
			$.ajax({
				url: "/Nexus/ResendAllEmails",
				success: function (data) {
					StoreJsonAlert(data);
					location.reload();
				}
			});
		}

		$(function () {
			$(".tablefilter").filterTable({ inputSelector: '#input-filter' });

			$("table").tablesorter({
				headers: {
					1: { sorter: 'attr' },
					2: { sorter: 'attr' }
				},
				sortForce: [[0, 1]],
				sortStable: true,
			});
		});
	</script>


}


<div class="panel panel-primary">
	<div style="float:right;padding:2px;width: calc(100% - 170px); min-width:622px;text-align: right;" class="">

		<input id="input-filter" style="max-width: 296px;display: inline-block;" type="text" class="form-control" placeholder="Filter by.. (ex. 'Joe', 'CEO', 'Sales Dept.' etc)" />
		<button id="resendButton" class="btn btn-default  plus" onclick="ResendEmails()">
			Resend all invites
		</button>
		@if (Model.Users.Any(p => p.EmailSent) || !Model.Organization.SendEmailImmediately) {
			<button id="sendButton" class="btn btn-default  plus" onclick=" SendEmails() ">
				Send invites
			</button>
		}
		<button class="btn btn-default  plus" style="width: 69px;" onclick="@Html.ShowModal("Add managed user", "/User/AddModal", "/nexus/AddManagedUserToOrganization")">
			Add
		</button>
		@*<a class="btn btn-default plus"  href="/Manage/Reorganize">
				Reorganize
			</a>*@
	</div>
	<div class="panel-heading">

		<h3 class="panel-title">Manage Members</h3>

	</div>
	<div class="table-responsive">
		<table class="table table-condensed table-hover tablesorter tablefilter">
			<thead>
				<tr>
					<th class="hidden"></th>
					<th style="width:15px;" class="alignCenter  noPadLeft"></th>
					<th style="width:15px;" class="alignCenter  noPadLeft"></th>
					<th style="width:15px;" class="alignCenter  noPadLeft"></th>
					<th style="width:15px;" class="alignCenter  noPadLeft"></th>
					<th style="width:15px;" class="alignCenter  noPadLeft"></th>
					<th style="width:1px">Name</th>
					<th style="width:100%">Email</th>
					<th style="min-width:10px" class="NalignCenter">Positions</th>
					<th style="min-width:40px" class="NalignCenter">Teams</th>
					<th style="min-width:10px" class="NalignCenter">Managers</th>
					@*<th style="width:10px" class="NalignCenter">Roles</th>*@
					@*<th style="width:10px" class="NalignCenter">Questions</th>*@
					@if (Model.Organization.ManagersCanRemoveUsers) {
						<th style="width:10px" class="alignCenter"></th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var p in Model.Users.OrderByDescending(x => x.Managing)/*.ThenBy(x=>-1*(x.Admin.ToInt()+x.Manager.ToInt()))*/.ThenBy(x => x.Name)) {

					<tr class="@(p.Managing?"managing":"grayRow") row_@(p.Id)">
						<td class="hidden">@(p.Managing ? 1 : 0)</td>
						<td class="alignCenter noselect  noPadLeft">
							@*@((p.Managing).GetIcon("glyphicon-eye-open strokeLightGreen", "glyphicon-eye-close gray", "You are managing", "You are not managing"))*@


							@*if (p.Managing)
									{
										<div onclick="@Html.ShowModal("Edit " + p.Name, Url.Action("EditModal", "User", new { id=p.Id }), Url.Action("EditModal", "User"))" class="editButton"></div>
								}*@

							<span @if (p.Manager) { if (p.Admin) {  @: class="glyphicon glyphicon-tower gold strokeGold" title="An admin" data-sort="1"
								                                                                                    } else { @: class="glyphicon glyphicon-tower darkblue strokeDarkBlue" title="A supervisor" data-sort="2"
								                                                                                        } } else {  @: class="glyphicon glyphicon-user blue strokeBlue" title="Not a supervisor" data-sort="3"
								                                                                                                                                                                }
								  @if (p.Managing) { @: style="cursor:pointer;" onclick="@Html.ShowModal("Edit " + p.Name, Url.Action("EditModal", "User", new { id = p.Id }), Url.Action("EditModal", "User"))"
								}>
							</span>

						</td>
						<td class="alignCenter noselect noPadLeft">

							@if (p.Verified || (!p.Managing && !Model.ManagingOrganization)) {
								if (p.Verified) {
									<span title="Joined." class="glyphicon glyphicon-ok-sign strokeGray gray" data-sort="4"></span>
								}
								else {
									<span title="Has not joined." class="glyphicon glyphicon-envelope strokeGray gray" data-sort="3"></span>
								}
							}
							else {
								if (p.EmailSent) {
									<span data-sort="2" title="Resend Email" class="glyphicon glyphicon-envelope strokeRed red clickable icon" onclick="@Html.ShowModal("Resend Email", "/Organization/ResendJoin/" + p.Id, "/Organization/ResendJoin/" + p.Id)"></span>
								}
								else {
									<span data-sort="1" class="glyphicon glyphicon-exclamation-sign red strokeRed clickable icon" title="Invitation not sent." onclick="@Html.ShowModal("Send Email", "/Organization/ResendJoin/" + p.Id, "/Organization/ResendJoin/" + p.Id)"></span>
								}
							}
						</td>
						<td class="alignCenter" title="Individual Quarterly @Html.Organization().Settings.RockName">
							<a href="~/Manage/UserDetails/@p.Id">@p.NumRocks</a>
						</td>
						<td class="alignCenter" title="Individual Roles">
							<a href="~/Manage/UserDetails/@p.Id">@p.NumRoles</a>
						</td>
						<td class="alignCenter" title="Scorecard Measurables">
							<a href="~/Manage/UserDetails/@p.Id">@p.NumMeasurables</a>
						</td>
						<td class="noOverflow" style="max-width: 160px;" title="@p.Name">
							<a href="~/Manage/UserDetails/@p.Id">
								@p.Name
							</a>
						</td>
						<td class="noOverflow" style="max-width: 150px;" title="@p.Email">
							<a href="mailto:@p.Email">@p.Email</a>
						</td>
						<td class="NalignCenter noOverflow" style="max-width: 200px;">
							<a href="@Url.Action("Positions","User",new {id = p.Id})" class="fullWidth">
								@Html.EditFirstButton(p.PositionTitles, p.Managing)
							</a>
						</td>
						<td class="NalignCenter noOverflow" style="max-widthh: 80px;">
							<a href="@Url.Action("Teams","User",new {id = p.Id})" class="fullWidth">
								@Html.EditFirstButton(p.TeamsTitles, p.Managing)
							</a>
						</td>
						<td class="NalignCenter noOverflow" style="max-widthh: 180px;">
							<a href="@Url.Action("Managers", "User", new { id = p.Id })" class="">
								@Html.EditFirstButton(p.ManagersTitles, p.Managing)
							</a>
						</td>
						@*<td class="NalignCenter noOverflow">
								<span>
									@*Html.ViewOrEdit(p.Managing)*
									<span title="">@(p.NumRoles)</span>
								</span>
							</td>
							<td>
								<a href="@Url.Action("Edit", "Responsibilities", new { id = p.Id })" class="fullWidth">
									<span>
										*Html.ViewOrEdit(p.Managing)*
										<span title="Individual questions:@(p.NumIndividualResponsibilities), Other questions:@(p.NumTotalResponsibilities - p.NumIndividualResponsibilities)">@(p.NumTotalResponsibilities)</span>
									</span>

								</a>
							</td>*@
						@if (Model.Organization.ManagersCanRemoveUsers || Model.ManagingOrganization) {
							<td>
								@if (p.Managing || Model.ManagingOrganization) {
									<span data-sort="1" onclick="@(Html.ShowModal("Remove " + p.Name + " from the organization?", "/User/Remove/" + p.Id, "/User/Remove", onCompleteFunction: "function(){$('.row_" + p.Id + "').remove();UnstoreJsonAlert();}"))"
										  class="glyphicon glyphicon-trash clickable">
									</span>
								}
							</td>
						}
					</tr>
				}
			</tbody>

		</table>

	</div>
</div>
