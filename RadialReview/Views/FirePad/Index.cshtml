@model RadialReview.Models.FirePad.FirePadData
@{
    Layout = null;
}
<!doctype html>
<!-- See http://www.firepad.io/docs/ for detailed embedding docs. -->
<html>
<head>
    <meta charset="utf-8" />
    
    @Scripts.Render("~/bundles/FirePad")
    @Styles.Render("~/Content/FirePad")
   
    <style>
        html {
            height: 100%;
        }

        body {
            margin: 0;
            height: 100%;
            position: relative;
        }
        /* Height / width / positioning can be customized for your use case.
         For demo purposes, we make firepad fill the entire browser. */
        #firepad-container {
            width: 100%;
            height: 100%;
        }

            #firepad-container .firepad-btn {
                border-bottom-width: 1px;
            }

            #firepad-container .firepad-toolbar {
                height: 35px;
                line-height: 0px;
                background: #eee;
            }

            #firepad-container .firepad-btn a, span {
                font-size: 12px;
            }

        .firepad-with-toolbar .CodeMirror {
            top: 27px;
            position: relative;
        }
    </style>
</head>
<body onload="init()">
    @Html.HiddenFor(x => x.firepadRef)
    @Html.HiddenFor(x => x.text)
    @Html.HiddenFor(x => x.padID)
    
    <div>
        <div id="firepad-container"></div>       
    </div>
    <script>
    function init() {
        var _firepadRef = document.getElementById("firepadRef").value;
        var _text = document.getElementById("text").value;
        var _padID = document.getElementById("padID").value;
      
      var config = {
          apiKey: "AIzaSyCpfwGkfGnPJdfFvtuirwemLk0ZfNKKDb4",
          authDomain: "tractiontools-72dc6.firebaseapp.com",
          databaseURL: "https://tractiontools-72dc6.firebaseio.com",
          projectId: "tractiontools-72dc6",
          storageBucket: "tractiontools-72dc6.appspot.com",
          messagingSenderId: "194786005639"
      };
      firebase.initializeApp(config);

        //// Get Firebase Database reference.
      var firepadRef;
      if (_firepadRef == ' ') {
          firepadRef = getFireBaseRef();
      } else {
          firepadRef = firebase.database().ref(_firepadRef);

      }

      //// Create CodeMirror (with lineWrapping on).
      var codeMirror = CodeMirror(document.getElementById('firepad-container'), { lineWrapping: true });

        //// Create Firepad (with rich text toolbar and shortcuts enabled).
      var firepad = Firepad.fromCodeMirror(firepadRef, codeMirror,
          { richTextToolbar: true, richTextShortcuts: true });

      //// Initialize contents.
      firepad.on('ready', function () {

          if (firepad.isHistoryEmpty()) {
              if (_firepadRef == ' ') {
                  firepad.setHtml(_text + '<br/><br/><br/><br/>');
                 updateFirepad(firepadRef, _text, _padID);
              }
        }
      });

      

    }

    // Helper to get hash from end of URL or generate a random one.
    function getFireBaseRef() {
      var ref = firebase.database().ref();
      var hash = window.location.hash.replace(/#/g, '');

      if (hash) {
        ref = ref.child(hash);
      } else {
        ref = ref.push(); // generate unique location.
        window.location = window.location + '#' + ref.key; // add it as a hash to the URL.
      }
      if (typeof console !== 'undefined') {
        console.log('Firebase data: ', ref.toString());
      }
      return ref;
    }
    function updateFirepad(firepadRef, text, padID) {

        firebase.database().ref('FirePad/' + padID).child('firepadRef').set(firepadRef.key);
    }

    </script>
</body>
</html>
