@model RadialReview.Models.ViewModels.ResponsibilityViewModel

@{
    ViewBag.Title = "Modal";
}

<div class="form">
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ResponsibilityGroupId)
    <div class="row">
        <div class="col-sm-3">
            <label>Category:</label>
        </div>
        <div class="col-sm-9 catContainer">
            @Html.DropDownListFor(x => x.CategoryId, Model.Categories.OrderBy(x => x.Id == -1).ThenBy(y => y.Id==1).ThenBy(y => y.Id).Select(x =>
                    new SelectListItem()
                    {
                        Selected = (x.Id == Model.CategoryId),
                        Text = x.Category.Translate(),
                        Value = "" + x.Id
                    }), new { id = "positionSelector", @class = "form-control" })
        </div>
        <div class="col-sm-5 hidden" id="newCategory">
            @Html.TextBoxFor(x => x.NewCategory, new { id = "newCategoryInput", placeholder = "New category name", @class = "form-control" })
        </div>
    </div>
    <div class="smallBreak"></div>
    <div class="smallBreak"></div>
    <div class="row">
        <div class="col-sm-3">
            <label>Importance:</label>
        </div>
        <div class="col-sm-9">
            @Html.EnumDropDownListFor(x => x.Weight,new { @class = "form-control" })
        </div>
    </div>
    <div class="smallBreak"></div>
    <div class="smallBreak"></div>
    <div class="row">
        <div class="col-sm-3">
            <label>Question:</label>
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(x => x.Responsibility, new { @class = "form-control" })
        </div>
    </div>
    <div class="smallBreak"></div>
    <div class="smallBreak"></div>

    <div class="row">
        <div class="col-sm-3">
            <label>Active:</label>
        </div>
        <div class="col-sm-1">
            @Html.CheckBoxFor(x => x.Active, new { @class = "checkbox" })
        </div>
    </div>
</div>
<script>
    function Update() {
        if ($("#positionSelector").val() == -1) {
            $("#newCategory").removeClass("hidden");
            $(".catContainer").addClass("col-sm-4")
            $(".catContainer").removeClass("col-sm-9")
        } else {
            $("#newCategory").addClass("hidden");
            $("#newCategoryInput").val(null);
            $(".catContainer").addClass("col-sm-9")
            $(".catContainer").removeClass("col-sm-4")
        }
    }

    $(function () {
        $("#positionSelector").change(function () {
            Update();
        })
        Update();
    });

    function verify() {
        if ($("[name='CategoryId']").val() == -1 && !$("[name='NewCategory']").val())
            return "New category name is required.";
        if (!$("[name='Responsibility']").val())
            return "Responsibility is required.";
        return true;
    }
</script>