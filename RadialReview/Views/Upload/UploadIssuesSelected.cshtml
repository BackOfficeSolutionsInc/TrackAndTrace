@model RadialReview.Controllers.UploadController.UploadIssuesSelectedDataVM


@*<div class="row">
        <div class="col-md-3">
            <h3>Users</h3>
            <ol>
                @foreach (var r in Model.Users) {
                    Tuple<string, string, long> res = Tuple.Create("", "", -1L);
                    Model.UserLookup[r].TryResolveOne(ref res);
                    <li> @r => @res.Item1 @res.Item2 @res.Item3 </li>
                }
            </ol>
        </div>
        <div class="col-md-3">
            <h3>Measurables</h3>
            <ol>
                @foreach (var r in Model.Measurables) {
                    <li>@r</li>
                }
            </ol>
        </div>
        <div class="col-md-3">
            <h3>Goal</h3>
            <ol>
                @foreach (var r in Model.Goals) {
                    <li>@r</li>
                }
            </ol>
        </div>
        <div class="col-md-3">
            <h3>Weeks</h3>
            <ol>
                @foreach (var r in Model.Dates) {
                    <li>@r</li>
                }
            </ol>
        </div>
    </div>*@
@using (Html.BeginForm("SubmitIssues", "upload", FormMethod.Post)) {
   <input type="hidden" name="Path" value="@Model.Path" />
    @*<input type="hidden" name="ScoreRange" value="@Model.ScoreRange" />
        <input type="hidden" name="DateRange" value="@Model.DateRange" />
        <input type="hidden" name="MeasurableRectType" value="@Model.MeasurableRectType" />*@


    <div class="clearfix"></div>
    <div class="table-responsive">
        <table class="table table-bordered resultTable">
            <thead>
                <tr>
                    <th style="min-width: 120px;">Owner</th>
                    @if (Model.IncludeUsers) { 
                        <th style="min-width: 120px;">Best Guess</th>
                    }
                    <th style="min-width: 280px;">Issue</th>
                        <th style="min-width: 380px;">Details</th>
                </tr>
            </thead>
            <tbody>
                @{var i = 0;}
                @foreach (var row in Model.Issues) {
                    
                    var users = !Model.IncludeUsers?Model.AllUsers.Select((x,ii)=>{
                        x.Selected = (ii == 0);
                        return x;
                    }).OrderBy(x=>x.Text).ToList():Model.UserLookup[Model.Users[i]].GetProbabilities().OrderByDescending(x => x.Value).Select(x => x.Key).ToSelectList(x => x.FirstName + " " + x.LastName, x => x.UserOrgId);
                    var issue = Model.Issues[i];
                    var details =   Model.DetailsStrings[i];
                    <tr>
                        @if (Model.IncludeUsers) { 
                            <td style="font-style:italic">@Model.Users[i]</td>
                        }
                        <td>@Html.DropDownList("m_user_" + i, users)</td>
                        <td>@Html.TextBox("m_issue_" + i, issue, new { style="width:100%;"})</td>
                        <td>@Html.TextBox("m_details_" + i, details, new { style = "width:100%;" })</td>
                        
                    </tr>
                        i++;
                }
            </tbody>
        </table>
    </div>
}