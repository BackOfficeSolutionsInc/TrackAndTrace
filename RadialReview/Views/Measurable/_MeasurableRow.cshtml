@using RadialReview.Models.Enums
@model RadialReview.Models.Scorecard.MeasurableModel
@{
	var guid = Guid.NewGuid().ToString().Replace("-", "");
	var lockedClass = Model.FromTemplateItemId.HasValue ? "disable unlockMR-" + guid : " unlockMR-" + guid;
}

<div class="roleRow measurable-row">
	@using (Html.BeginCollectionItem("Measurables"))
	{
		<div class="roww" style="position:relative">
			<div style="width:calc( 100% - 52px );display:inline-block">
				@Html.HiddenFor(x => x.Id)
				<div class="row">
					<div class="col-sm-4  col-xs-6 noPadLeft"><b class="heading">Measurable:</b>@Html.TextBoxFor(x => x.Title, new { @class = "form-control roleItem " + lockedClass })</div>
					<div class="col-sm-2  col-xs-6 noPadRight"><b class="heading">Admin:</b>@Html.DropDownListFor(x => x.AdminUserId, ((IEnumerable<SelectListItem>)ViewBag.AllMembers), new { @class = "form-control roleItem " + lockedClass })</div>
				
					<div class="col-sm-2 col-xs-3 noPadLeft"><b class="heading">Goal:</b>@Html.EnumDropDownListFor(x => x.GoalDirection, new { @class = "form-control roleItem " + lockedClass })</div>
					<div class="col-sm-2 col-xs-5 noPadLeft noPadRight">
						<b class="heading blank">&nbsp;</b>
						<input type="number" class="form-control roleItem  @lockedClass" name="@Html.NameFor(x=>x.Goal)" step="any" value="@((Model.Goal).ToString("0.#####"))" />
					</div>
					<div class="col-sm-2  col-xs-4 noPadRight"><b class="heading blang ">&nbsp;</b>@Html.EnumDropDownListFor(x => x.UnitType, new { @class = "form-control " + lockedClass })</div>
				</div>
				@if (ViewBag.ShowAccountable == true)
				{
					<div class="row">
						<div class="col-sm-12"><b class="heading">Accountable User:</b>@Html.DropDownListFor(x => x.AccountableUserId, (IEnumerable<SelectListItem>)ViewBag.AllMembers, new { @class = "form-control roleItem " + lockedClass })</div>
					</div>
				}
				@*<div class="row">
					<div class="col-sm-6"><b>Measurable:</b>@Html.TextBoxFor(x => x.Title, new { @class = "form-control roleItem " + lockedClass })</div>
					<div class="col-sm-6"><b>Measurable Admin:</b>@Html.DropDownListFor(x => x.AdminUserId, ((IEnumerable<SelectListItem>)ViewBag.AllMembers), new { @class = "form-control roleItem " + lockedClass })</div>
					<div class="col-sm-6"></div>
				</div>
				<div><b>Goal:</b></div>
				<div class="row">
					<div class="col-sm-6">@Html.EnumDropDownListFor(x => x.GoalDirection, new { @class = "form-control roleItem " + lockedClass })</div>
					<div class="col-sm-4 col-xs-6 noPadLeft">
						<input type="number" class="form-control roleItem  @lockedClass" name="@Html.NameFor(x=>x.Goal)" step="any" value="@((Model.Goal).ToString("0.#####"))" />
					</div>
					<div class="col-sm-2  col-xs-6 noPadRight">@Html.EnumDropDownListFor(x=>x.UnitType,new {@class="form-control"})</div>
				</div>
				@if (ViewBag.ShowAccountable == true)
				{
					<div class="row">
						<div class="col-sm-6"><b>Accountable User:</b>@Html.DropDownListFor(x => x.AccountableUserId, (IEnumerable<SelectListItem>)ViewBag.AllMembers, new { @class = "form-control roleItem " + lockedClass })</div>
					</div>
				}*@
				<hr class="hidden-md hidden-lg hidden-sm" />
				@Html.HiddenFor(x => x.DeleteTime)
				@Html.HiddenFor(x => x.CreateTime)
				@Html.HiddenFor(x => x.NextGeneration)
				@Html.HiddenFor(x => x.DueDate)
				@Html.HiddenFor(x => x.DueTime)
				@Html.HiddenFor(x => x.FromTemplateItemId, new { @class = "templateId " + lockedClass })
			</div>
			<span style="padding-left:8px;top: 30px;position: absolute" class="glyphicon glyphicon-trash deleteRow clickable @lockedClass" title="@(Model.FromTemplateItemId != null?"Unlink from template before deleting":"Delete")"></span>
			@if (Model.FromTemplateItemId != null)
			{
				<span style="padding-left: 8px;top: 36px;position: absolute;"
				      class="icon fontastic-icon-link-broken lock"
				      onclick="$('.unlockMR-@guid').removeClass('disable');$(this).remove();$('.templateId.unlockMR-@guid').prop('value',false);"
				      title="This measurable was created by a template. Click to disassociate."></span>
			}

		</div>
	}
	<div class="smallBreak"></div>
	<div class="smallBreak"></div>
</div>
