@{
	var forceMin = ViewBag.ForceMin == null?"":","+((int)ViewBag.ForceMin);
    var scorecardKey = ViewBag.ScorecardKey as string??"model.Scorecard.Key";
}

<div class="btn-group pull-right" style="padding: 5px 3px;">
	<a class="btn btn-default btn-xs" href="/L10/ExportScorecard/{{::meetingId}}?type=csv" target="_blank"><span class="glyphicon glyphicon-save"></span> Export (.csv)</a>
</div>
<div class="btn-group pull-right" style="padding: 5px 0px;">
	<div class="btn btn-default btn-xs measurableModal" data-recurrence="{{::meetingId}}"><span class="icon fontastic-icon-science-laboratory"></span> Add Measurable</div>
</div>

@{
Html.RenderPartial("~/Views/Measurable/partial/list.cshtml", new ViewDataDictionary(){
        {"AddHeaders", false},
        {"AddController", false},
        {"DisableName", false},
        {"EditOwner", true},
        {"ForceMin", ViewBag.ForceMin},
        {"Selector", "(model.Scorecard) "},
    }); }


@using (Html.BeginScripts())
{
	<script src="~/Scripts/jquery/jquery.ui.sortable.js"></script>
	<script src="~/Scripts/L10/L10Scorecard.js"></script>
	<script>
		
		$(function () {
			fixHelperModified = function (e, tr) {
				var $originals = tr.children();
				var $helper = tr.clone();
				$helper.children().each(function (index) {
					$(this).width($originals.eq(index).width());
				});
				return $helper;
			};

			var updateIndex = function (e, ui) {
				var order = [];
				var i = 0;
				$('tr', ui.item.parent()).each(function (i) {
						order.push(+$(this).attr("data-measurable"));
				});

				var data = {
					ordering: order,
					recurrenceId: angular.element(document.querySelector('#ScorecardContainer')).scope().meetingId
				};
				$.ajax({
					url: "/L10/UpdateRecurrenceMeasurableOrdering",
					method: "POST",
					data: $.param(data, true),
					success: function(d) {
						showJsonAlert(d);
						angular.element(document.querySelector('#ScorecardContainer')).scope().$apply();
					}
				});
			};

			$(".scorecard-table tbody").xsortable({
				items: ">.reorderable",
				handle: ".handle",
				helper: fixHelperModified,
				stop: updateIndex,
				placeholder: "xsortable-placeholder"
			}).disableSelection();
		});
	</script>
}

@using (Html.BeginStyles()) {
    <link href="//cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.0/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet" />
    <style>
        /*.inlineEdit:hover {
            text-decoration: none;
            border-bottom: dashed 1px #08C;
            cursor: pointer;
        }*/

        .grid.gray {
            background-color: #eee;
            height: 100%;
        }
    </style>
}