@using FluentNHibernate.Utils
@model RadialReview.Models.L10.VM.L10MeetingVM
<div class="rocks meeting-page">
	<div class="row">
		<div class="col-md-12">
			<hgroup class="page-header">
				<div class="pull-right">
					<div class="btn-group">
						<div class="btn btn-default btn-xs @(Model.CanEdit?"":"disabled")" onclick="@(Model.CanEdit?Html.ShowModal("Add Rock", "/L10/AddRock/" + Model.Recurrence.Id, "/L10/AddRock/"):new HtmlString(""))">
                            <span class="icon fontastic-icon-plus-3"></span> Add Rock
						</div>
					</div>
					@Html.Partial("partial/ButtonBar", Model)

				</div>
				<h2>@Html.Organization().Settings.RockName Review <small></small></h2>
			</hgroup>
			<div class="empty-holder rock-empty-holder @(Model.Meeting._MeetingRocks.Any() ? "hidden" : "")"></div>

            <div class="rocks-container  @(Model.Meeting._MeetingRocks.Any() ? "" : "hidden")" style="padding-bottom: 20px;margin-bottom:128px;">
                @if (Model.Rocks.Where(x => x.ForRock.CompanyRock).Any()) {
                    <div class="company-rock-container">
                        @Html.Partial("partial/CompanyRockGroup", Model.Rocks.Where(x => x.ForRock.CompanyRock).ToList())
                    </div>
                    <hr />
                }

                @Html.Partial("partial/RockGroup", Model.Rocks)

                @*@foreach (var person in Model.Rocks.GroupBy(x => x.ForRock.ForUserId))
            {
                <div class="component">
                    @Html.Partial("_Picture", person.First().ForRock.AccountableUser.ImageUrl(true, ImageSize._32))
                    <span class="owner">
                        @person.First().ForRock.AccountableUser.GetName()
                    </span>
                    <div class="table-responsive">
                        <table style="width:100%">
                            <tr>
                                <th style="width: 46px"></th>
                                <th style="width: 1px"></th>
                                <th></th>
                            </tr>
                            @foreach (var i in person)
                            {
                                <tr class="rock_@(i.ForRock.Id)">
                                    <td class="buttonHolder currentBlue" style="min-width: 45px;border-radius: 6px;height: 30px;margin: 1px;padding: 4px;">
                                        <span class="icon fontastic-icon-pinboard issuesButton issuesModal"
                                              data-meeting="@Model.Meeting.Id"
                                              data-recurrence="@Model.Recurrence.Id"
                                              data-rock="@(i.ForRock.Id)"
                                              data-method="CreateRockIssue"></span>
                                        <span class="glyphicon glyphicon-unchecked todoButton todoModal"
                                              data-meeting="@Model.Meeting.Id"
                                              data-recurrence="@Model.Recurrence.Id"
                                              data-rock="@(i.ForRock.Id)"
                                              data-method="CreateRockTodo"
                                              data-accountable="@i.ForRock.ForUserId">
                                        </span>
                                    </td>
                                    <td class="">@Html.EditorFor(x => i.Completion, "RockStateThin", new { name = "rock_" + i.Id })</td>
                                    <td data-rock="@(i.ForRock.Id)" class="message">@i.ForRock.Rock</td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            }*@

            </div>
		</div>
	</div>
</div>
<script>
	var recurrenceId = @Model.Recurrence.Id;
	var meetingId = @Model.Meeting.Id;
</script>
<script src="~/Scripts/components/rockstate.js"></script>