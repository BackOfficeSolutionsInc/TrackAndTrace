@using FluentNHibernate.Utils
@model RadialReview.Models.L10.VM.L10MeetingVM
@{
	var useMilestone = Model.Recurrence.RockType == RadialReview.Model.Enums.L10RockType.Milestones;
	var hasSidebar = useMilestone;

}



<div class="rocks meeting-page rock-type-@Model.Recurrence.RockType">
	<div class="row">
		<div class="@(hasSidebar?"col-md-8":"col-md-12")">
			<hgroup class="page-header listing fixed-pos fader">
				<div class="pull-right">
					<div class="btn-group smallBreak">
						<div class="btn btn-default btn-xs @(Model.CanEdit?"":"disabled")" onclick="@(Model.CanEdit?Html.ShowModal("Add Rock", "/L10/AddRock/" + Model.Recurrence.Id, "/L10/AddRock/"):new HtmlString(""))">
							<span class="icon fontastic-icon-plus-3"></span> Add Rock
						</div>
					</div>
					@Html.Partial("partial/ButtonBar", Model)

				</div>
				<h2 class="l10-page-title">Rock Review <small></small></h2>
			</hgroup>
			<div class="empty-holder rock-empty-holder @(Model.Meeting._MeetingRocks.Any() ? "hidden" : "")"></div>
			<div class="rocks-container @(Model.Meeting.L10Recurrence.CombineRocks?"rocks-combine":"")  @(Model.Meeting._MeetingRocks.Any() ? "" : "hidden")" style="padding-bottom: 20px;margin-bottom:128px;">

				@if (Model.Rocks.Where(x => x.ForRock.CompanyRock).Any()) {
					<div class="company-rock-container">
						@Html.Partial("partial/CompanyRockGroup", Model.Rocks.Where(x => x.ForRock.CompanyRock).ToList())
						<hr />
					</div>
				}

				@Html.Partial("partial/RockGroup", Model.Rocks, new ViewDataDictionary() { { "CanEdit", Model.CanEdit } })

			</div>
		</div>
		@if (hasSidebar) {
			<div class="col-md-4 hidden-xs hidden-sm">
				<div class="hidden-lg hidden-md" style="height: 25px;"></div>
				<div style="">
					<div class="fixed-pos">
						<hgroup class="page-header details">
							<h4>Notes</h4>
						</hgroup>
						<div class="" id="rock-details"><div class="component"><span style="color: #ddd;">Click on a rock to see its details.</span></div></div>
					</div>
				</div>
			</div>
		}
	</div>
</div>
<script>
	window.recurrenceId = @Model.Recurrence.Id;
	window.meetingId = @Model.Meeting.Id;
</script>

@if (useMilestone) {
	<script>
		window.milestones = @Html.ArrayToString(Model.Milestones);
		recalculateMilestones();
	</script>
}
	@*<script src="~/Scripts/components/rockstate.js"></script>*@
