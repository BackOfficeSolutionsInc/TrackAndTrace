@using NHibernate.Criterion
@using RadialReview.Models.Timeline
@model List<RadialReview.Models.Timeline.MeetingTimeline>
@{
	ViewBag.Title = "Timeline";
	Layout = "~/Views/Shared/_Layout.cshtml";
	var first = true;

}

<div class="top-fixed" style="padding: 10px 40px;">
	<div class="row">
		<div class="col-lg-12">
			<div class="clearfix">
				<h2 style="float:left">Timeline: <small>@Model.FirstOrDefault().NotNull(x => x.Meeting.L10Recurrence.Name)</small></h2>
				<h2 style="min-width: 200px;"><input class="form-control" type="text" id="input-filter" style="width: 250px;float:right;" placeholder="Search..." /></h2>
			</div>

			<div class="btn-group">
				<table>
					<tr>
						@foreach (var k in TimelineLookup.GetIconOrdering()) {
							<td title="@k.FriendlyName"><span class="filter-switch on" data-filter="@k.Icon"><span class="@k.Icon"></span></span></td>
						}
						<td><div style="width: 10px;text-align: center">|</div></td>
						<td><span class="filter-switch on" data-filter="glyphicon glyphicon-comment" title="Transcriptions"><span class="glyphicon glyphicon-comment"></span></span></td>
						<td><div style="width: 10px;text-align: center"></div></td>
						<td> <span class="btn-link btn" onclick="$('.filter-switch:not(.on)').trigger('click')">Show All</span> | <span class="btn-link btn" onclick="$('.filter-switch.on').trigger('click')">Hide All</span></td>
					</tr>
				</table>
			</div>
		</div>
	</div>
</div>
<div style="height:120px"></div>

@foreach (var meeting in Model.OrderByDescending(x => x.Meeting.StartTime)) {
	<div class="panel-group smallBreak2 meeting_@(meeting.Meeting.Id)" id="accordion" role="tablist" aria-multiselectable="true">
		<div class="panel panel-default">
			<div class="panel-heading" role="tab" id="heading_@(meeting.Meeting.Id)">
				<h4 class="panel-title">
					<a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapse_@(meeting.Meeting.Id)" aria-expanded="true" aria-controls="collapse_@(meeting.Meeting.Id)">
						<div class="clearfix">
							<span class="pull-left">
								<b>Meeting:</b>
								<span class="startDate" style="width:100px;text-align: center">@Html.Partial("~/Views/Shared/DisplayTemplates/DateTime.cshtml", Html.Organization().ConvertFromUTC(meeting.Meeting.CreateTime))</span>
							</span>
							<span class="pull-right">
								@{
									var startTime = meeting.Meeting.CreateTime;
									var endTime = meeting.Meeting.CompleteTime.NotNull(x => Html.Organization().ConvertFromUTC(x.Value));

								}
								<span class="startTime" @*onclick="changeTime(@meeting.Meeting.Id,'start',this)" data-time="@startTime.ToJavascriptMilliseconds()"*@ style="width:75px;text-align: right">@Html.Organization().ConvertFromUTC(startTime).ToShortTimeString()</span>
								<span> - </span>
								<span class="endTime" style="width:75px" @*onclick="changeTime(@meeting.Meeting.Id,'end',this)" data-time="@endTime.NotNull(x=>x.ToJavascriptMilliseconds())"*@>@( endTime.NotNull(x => x.ToShortTimeString()) ?? "On-going")</span>
							</span>&nbsp;
						</div>
					</a>
				</h4>
			</div>
			<div id="collapse_@(meeting.Meeting.Id)" class="panel-collapse collapse @(first?"in":"")" role="tabpanel" aria-labelledby="headingOne">
				<div class="panel-summary" title="Meeting Summary"><span class="glyphicon glyphicon-list" onclick="meetingSummary(@(meeting.Meeting.Id))"></span></div>
				<div class="panel-delete" title="Delete Meeting"><span class="glyphicon glyphicon-trash" onclick="deleteMeeting(@(meeting.Meeting.Id))"></span></div>
				<div class="panel-body">
					@if (meeting.Items.Any()) {
						<table class="fullWidth table table-condensed tablefilter">
							<thead>
								<tr>
									<th class="alignCenter" style="width: 110px">Date</th>
									<th class="" style="width: 110px">User</th>
									<th style="width: 1px">Action</th>
									<th class="alignCenter">Notes</th>
									<th></th>
								</tr>
							</thead>
							<tbody>
								@{
									var ordered = meeting.Items.OrderBy(x => x.Time);
									var fT = 0.0;
									var eT = 1.0;
									if (ordered.Count() > 1) {
										fT = ordered.First().Time.Ticks;
										eT = ordered.Last().Time.Ticks;
									}
								}
								@foreach (var f in ordered) {

									<tr data-filter-row="@f.Icon">
										<td style="white-space: nowrap; position: relative">@f.TimeString<span class="bar" style="width:@(Math.Max(2,(f.Time.Ticks - fT) / (eT - fT)*100))%"></span></td>
										<td class="" style="white-space: nowrap">@f.User</td>
										<td class="alignCenter"><span class="@f.Icon" style="background-color: @f.IconColor;padding:4px;color:rgba(0,0,0,.8);"></span></td>
										<td class="alignCenter" style="white-space: nowrap;font-weight: bold;">
											@foreach (var anchor in f.Anchors) {
												<a id="@anchor"></a>
											}

											@f.Title
										</td>
										<td style="white-space: pre-line">@f.Details</td>
									</tr>
								}
							</tbody>
						</table>
									} else {
										<div class="gray">No timeline information.</div>
									}
					@{
						first = false;
					}
				</div>
			</div>
		</div>
	</div>
						}

@using (Html.BeginScripts()) {
	@*<script src="/Scripts/jquery/jquery.filtertable.min.js"></script>*@
	@Scripts.Render("~/bundles/filtertable")
	<script>
		$(".tablefilter").filterTable({ inputSelector: '#input-filter', minRows: 0 });
		$(".filter-switch").on("click", function () {
			$(this).toggleClass("on");
			var isOn = ($(this).hasClass("on"));
			var f = $(this).attr("data-filter");
			console.log(f);
			$("[data-filter-row='" + f + "']").toggleClass("hidden", !isOn);
		});

		$(document).ready(function() {
			setTimeout(function() {
				var elem = $('#' + window.location.hash.replace('#', ''));
				if (elem.length) {
					var o = elem.offset();
					$(document).scrollTop(o.top - 200);
					$(elem).closest("tr").find("td").css({"color":"#3c763d","background-color":"#dff0d8"});
					setTimeout(function() {
						$(elem).closest("tr").flash();

					}, 500);
				}
			},1);
		});

		function deleteMeeting(id){
			showModal({
				icon: "danger",
				title: "Are you sure you want to delete this meeting?",
				success: function () {
					var mid = id;
					$.ajax({
						url: "/l10/deletemeeting/" + id,
						success: function () {
							$(".meeting_" + mid).slideUp();
						}
					});
				}
			});
		}

		function meetingSummary(id){

			showModal("Meeting Summary","/l10/meetingsummary/" + id,null);

			//$.ajax({
			//	url: "/l10/meetingsummary/" + id,
			//	success: function (data) {
			//		showModal({
			//			icon: "danger",
			//			title: "Meeting Summary",
			//			fields: [{type:"span",value:]
			//		});
			//	}
			//});


		}

		function changeTime(id, type, self) {
			var val = parseJsonDate($(self).data("time"),true);
			showModal({
				title: "Change the meeting "+type+" time?",
				fields: [{name:"date",type:"datetime",value:val}],
				success: function (data) {
					var mid = id;
					$.ajax({
						url: "/l10/EditMeetingTime/" + id+"?type="+type+"&time="+(+parseJsonDate(data.date)),
						success: function (data) {

							var start = parseJsonDate(data.Object.start);
							var end = parseJsonDate(data.Object.end);

							$(".meeting_" + mid + " .startDate").data("time", +start);
							$(".meeting_" + mid + " .endDate").data("time", +end);

							$(".meeting_" + mid + " .startDate").html(start.toLocaleDateString());
							$(".meeting_" + mid+" .startTime").html(start.toLocaleTimeString());
							if (end){
								$(".meeting_" + mid+" .endTime").html(end.toLocaleTimeString());
							}else{
								$(".meeting_" + mid+" .endTime").html("err");

							}
						}
					});
				}
			});

		}


	</script>
}

@using (Html.BeginStyles()) {

	<style>
		.top-fixed {
			position: fixed;
			top: 54px;
			left: 0;
			right: 0;
			background-color: white;
			z-index: 1;
			padding-bottom: 20px;
			border-bottom: 1px solid #F5F5F5;
			box-shadow: 0px 7px 5px -3px rgba(128, 128, 128, 0.2);
		}

		.icon {
			height: 16px;
		}

		.bar {
			height: 31px;
			position: absolute;
			background-color: rgba(62,57,53,0.07);
			left: 0;
			top: 0;
			z-index: 0;
			margin: auto;
			right: 0;
			border-top: 1px solid #ef7622;
		}

		.filter-switch span {
			padding: 2px;
		}

		.filter-switch {
			width: 20px;
			height: 20px;
			margin: 2px;
			display: inline-block;
			cursor: pointer;
		}

			.filter-switch.on {
				border: 1px solid rgba(0, 0, 0, .8);
				background-color: #f0ad4e;
				color: rgba(0, 0, 0, .8);
			}

			.filter-switch:not(.on) {
				color: rgba(0, 0, 0, .8);
				border: 1px solid rgba(0, 0, 0, .8);
			}

		.alt {
			background-color: #ffc;
			background-color: rgba(255, 255, 0, 0.2);
		}

		.panel-summary {
			top: -25px;
			right: -20px;
			float: right;
			position: relative;
			opacity: .3;
			transition: ease .2s opacity;
		}

		.panel-delete {
			top: 6px;
			right: -33px;
			float: right;
			position: relative;
			opacity: .3;
			transition: ease .2s opacity;
		}

		.panel-group:hover .panel-delete,
		.panel-group:hover .panel-summary {
			opacity: .6;
		}

		.panel-group .panel-delete:hover,
		.panel-group .panel-summary:hover {
			opacity: .8;
			cursor: pointer;
		}
	</style>
}