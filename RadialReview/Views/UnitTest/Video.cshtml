@model RadialReview.Models.VideoConference.VideoConferenceVM

@using (Html.BeginScripts())
{

	<script src="@Html.VideoConferenceUrl("/RTCMultiConnection.js")"></script>
	<script src="@Html.VideoConferenceUrl("/dev/FileBufferReader.js")"></script>
	<!-- socket.io for signaling -->
	<script src="@Html.VideoConferenceUrl("/socket.io/socket.io.js")"></script>

	<script>

		@*/*document.getElementById('open-room').onclick = function () {
			this.disabled = true;
			connection.open("@Model.RoomId");
		};

		document.getElementById('join-room').onclick = function () {
			this.disabled = true;
			connection.join("@Model.RoomId");
		};*/*@

		document.getElementById('open-or-join-room').onclick = function () {
			this.disabled = true;
			$(this).addClass("hidden");
			connection.openOrJoin("@Model.RoomId");
			/*connection.addStream({
				audio: true,
				video: true
			});*/
		};
		/*document.getElementById('video-go').onclick = function () {
			this.disabled = true;
			connection.addStream({
				audio: true,
				video: true
			});
		};*/
		// ................FileSharing/TextChat Code.............
		document.getElementById('share-file').onclick = function () {
			var fileSelector = new FileSelector();
			fileSelector.selectSingleFile(function (file) {
				connection.send(file);
			});
		};
		document.getElementById('input-text-chat').onkeyup = function (e) {
			if (e.keyCode != 13) return;
			// removing trailing/leading whitespace
			this.value = this.value.replace(/^\s+|\s+$/g, '');
			if (!this.value.length) return;
			connection.send(this.value);
			appendDIV(this.value);
			this.value = '';
		};

		var chatContainer = document.querySelector('.chat-output');
		function appendDIV(event) {
			var div = document.createElement('div');
			div.innerHTML = event.data || event;
			chatContainer.insertBefore(div, chatContainer.firstChild);
			div.tabIndex = 0; div.focus();

			document.getElementById('input-text-chat').focus();
		}

		var connection = new RTCMultiConnection();
		connection.socketURL = "@Html.VideoConferenceUrl():80";

		connection.enableFileSharing = true; // by default, it is "false".

		connection.session = {
			audio: true,
			video: true,
			data : true
		};

		connection.sdpConstraints.mandatory = {
			OfferToReceiveAudio: true,
			OfferToReceiveVideo: true
		};

		connection.onstream = function(event) {
			event.mediaElement.controls = false;
			console.log("onstream");
			chatContainer.appendChild(event.mediaElement);
		};

		connection.onmessage = appendDIV;
		connection.filesContainer = document.getElementById('file-container');

		connection.onopen = function() {
			document.getElementById('share-file').disabled      = false;
			document.getElementById('input-text-chat').disabled = false;
		};


	</script>
}


<button id="open-or-join-room">Auto Open Or Join Room</button>
<button id="video-go">Video</button>

<div id="chat-container">
	<input type="text" id="input-text-chat" placeholder="Enter Text Chat" disabled>
	<button id="share-file" disabled>Share File</button>
	<br>
	<div id="file-container"></div>
	<div class="chat-output"></div>
</div>

<div id="text"></div>