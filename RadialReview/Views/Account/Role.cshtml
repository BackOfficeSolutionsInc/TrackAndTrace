@model List<RadialReview.Models.UserOrganizationModel>
@{
	ViewBag.Title = "Change Role";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@section top{
	<div class="jumbotron">
		<h1>Select Role</h1>
	</div>
}


<div class="panel panel-primary">
	<!-- Default panel contents -->
	<div class="panel-heading"><b>Choose a role:</b></div>
	<!-- Table -->
	<table class="table">
		@if (ViewBag.Admin)
		{
            
			<tr>
				<td width="10px;"></td>
				<td>
					<form method="get" action="/Account/SetRole/">
						<input type="number" name="id" />
						<input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />
						<input type="submit" />
					</form>
				</td>
                <td><a href="/Organization/stats">stats</a></td>
				<td width="50%">
					@Html.Partial("~/Views/Shared/EditorTemplates/SearchUsers.cshtml", new ViewDataDictionary() {
					   {"OnClick","/Account/SetRole/{0}?ReturnUrl="+Url.Encode(ViewBag.ReturnUrl) },
					   {"SearchUrl","/Search/AdminAllUsers" }
				   })
				</td>

			</tr>
			@*using (Html.BeginStyles())
			{
				<link href="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css" rel="stylesheet" />
				<style>
					.select2-container .select2-selection--single {
						height: 28px !important;
					}
				</style>
			}

			using (Html.BeginScripts())
			{
				<script>

					$.fn.select2.amd.require(
						["select2/core", "select2/utils", "select2/compat/matcher"],
						function(Select2, Utils, oldMatcher) {
							$(document).ready(function() {
								$(".js-data-example-ajax").select2({
									ajax: {
										url: "/Account/AdminAllUsers",
										dataType: 'json',
										delay: 450,
										data: function(params) {
											return {
												search: params.term,
											};
										},
										processResults: function(data, page) {
											// parse the results into the format expected by Select2.
											// since we are using custom formatting functions we do not need to
											// alter the remote JSON data
											return {
												results: data.results
											};
										},
										cache: true
									},
									escapeMarkup: function(markup) { return markup; }, // let our custom formatter work
									minimumInputLength: 3,
									templateResult: function (d) {
										var pos = "";
										if (typeof (d.position) === "string")
											pos = d.position;
										var org = "";
										if (typeof (d.organization) === "string")
											org = " at " + d.organization ;

										return "<a href='/Account/SetRole/" + d.value + "'>" + d.text + "<span class='gray'>"+pos+org+"</span></a>";
									}, // omitted for brevity, see the source of this page
									templateSelection: function () {
										return d.value;
									} // omitted for brevity, see the source of this page
								});
							});
						});
				</script>
				<script src="//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"></script>

			}*@

		}
		@foreach (var userOrg in Model)
		{
			<tr>
				<td width="10px;"></td>
				<td>
					<a href="@(Url.Action("SetRole","Account", new { id = userOrg.Id, ReturnUrl=ViewBag.ReturnUrl }))">@userOrg.GetTitles().Surround("", " at ")@(userOrg.Organization.Name) <span style="color:gray">@(userOrg.ManagingOrganization ? " (Admin)" : "")</span></a>
				</td>
				<td width="10px;"></td>
			</tr>
		}




	</table>
</div>

@using (Html.BeginStyles()) {
    <style>
        html,body{
            background-color:#eee;
        }
        .panel{
            border:none;
        }
    </style>
}