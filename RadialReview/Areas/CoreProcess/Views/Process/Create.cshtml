@model RadialReview.Areas.CoreProcess.Models.Process.ProcessViewModel
@{
	ViewBag.Title = "CreateTask";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section top{
	<div class="jumbotron">
		<h1>Create Process</h1>
	</div>
}
<div class="row">
	<div class="col-sm-8 col-lg-12">

		<div class="panel panel-default">
			<div class="panel-heading" role="tab" id="headingFour">
				<h4 class="panel-title">
					<a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion1" href="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
						Create Process
					</a>
				</h4>
			</div>

			<div class="panel-body durations">
				@using (Html.BeginForm("Create", "Process", FormMethod.Post)) {
					<div class="form-group">
						<label class="col-sm-3 control-label">Process Name:</label>
						<div class="col-sm-5">
							<input type="text" class="form-control" name="ProcessName" value="@Model.Name" />
						</div>
					</div>
					<div style="clear:both">

					</div>
				if (Model.taskList != null) {
					for (int i = 0; i < Model.taskList.Count; i++) {
							@Html.HiddenFor(m => m.taskList[i].id);
							@Html.HiddenFor(m => m.taskList[i].description);
							@Html.HiddenFor(m => m.taskList[i].name);
					}
				}
					<div id="duration-table"></div>
					using (Html.BeginScripts()) {
						<script>
							DataTable({
								container:"#duration-table",
								clickReorder:"/Process/ReorderTask/{0}?oldOrder={1}&newOrder={2}",
								clickRemove: "/Process/Delete/{0}",
								clickEdit: "/EditTask/{0}",
								addButton:{
									text:"New Task"
								},
								nodataText:"No Process. Click add to create one.",
								clickAdd: "/Process/CreateTask",
								postAdd: "/Process/CreateTask",
								cells:[
									{ reorder:true },
									{ id: "id", classes: "", contents: function (x) { return x.id;}},
									{ name: "name", classes: "", contents: function (x) { console.log(x);return x.name;}},
									{ name: "description", classes: "", contents: function (x) { return x.description; } },
									{ edit: true },
									{remove:true},
								],
								data:@Html.ArrayToString(Model.taskList),
							});
						</script>
					}
					<div class="col-lg-12 col-md-7 col-sm-4 col-xs-2">
						<div class="alignCenter">
							<input type="submit" value="Submit" class="btn btn-danger" />
						</div>
					</div>
				}
			</div>


		</div>
	</div>
</div>
@using (Html.BeginStyles()) {
	@Styles.Render("~/Content/MeetingEdit")
	<style>
		.durations .form-group {
			margin-bottom: 4px;
		}

		html, body {
			background-color: #eee;
		}

		.width80 {
			width: 80px;
		}
	</style>
}
