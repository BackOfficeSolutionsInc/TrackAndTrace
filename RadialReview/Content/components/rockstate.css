
.rockstate.display {
	width: 80px;
	cursor: default;
}

.rockstate.editor {
	cursor: pointer;
}

.rockstate {
	height: 80px;
	width: 240px;
	position: relative;
	display: inline-block;
	/*align-items: center;
	justify-content: center;*/
	-moz-user-select: none;
	-khtml-user-select: none;
	-webkit-user-select: none;
	-o-user-select: none;
	-ms-user-select: none;
	user-select: none;
	padding: 0px;
	margin: 0px;
	background-color: #CDCDCD;
	-ms-border-radius: 6px;
	-moz-border-radius: 6px;
	-webkit-border-radius: 6px;
	border-radius: 6px;
}

.rockstate-contents {
	height: 100%;
	width: 100%;
	position: relative;
	display: inline-block;
	overflow: hidden;  
	z-index: 1;
}

.rockstate.rockstate-thin {
	height: 30px;
}


.rockstate .fill {
	width: 76px;
	height: 76px;
	margin: 2px;
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background-color: #CDCDCD;
	pointer-events: none;
	z-index: -1;
	-ms-border-radius: 4px;
	-moz-border-radius: 4px;
	-webkit-border-radius: 4px;
	border-radius: 4px;
	z-index: -1;
	pointer-events: none;
}

.rockstate.rockstate-thin .fill {
	height: 26px;
}

.rockstate.editor .fill.hover {
	background-color: rgba(0, 0, 0, 0.15);
	left: -80px;
}

.rockstate .fill.cursor {
	-webkit-transition: all .5s;
	-moz-transition: all .5s;
	-ms-transition: all .5s;
	-o-transition: all .5s;
	transition: all .5s;
	/*border: 1px dotted rgba(0, 0, 0, 0.25);*/
	border-bottom: 2px solid rgba(0, 0, 0, 0.15);
	
}


.rockstate .rockstate-val {
	width: 80px;
	height: 80px;
	display: inline-block;
	line-height: 80px;
	text-align: center;
	float: left;
	z-index: 3;
	/*align-items: center;
	justify-content: center;*/
	font-family: monospace;
	font-weight: bolder;
	font-size: 13px;
	color: #FFF;
	padding: 0;
	margin: 0;
}

.rockstate.rockstate-thin .rockstate-val {
	height: 30px;  
	font-size: 14px;
	line-height: 31px;
}


.rockstate .rockstate-val .center {
	z-index: 2;
}

.rockstate .rockstate-AtRisk:hover ~ .fill.hover {
	left: 0px;
}

.rockstate .rockstate-OnTrack:hover ~ .fill.hover {
	left: 80px;
}

.rockstate .rockstate-Complete:hover ~ .fill.hover {
	left: 160px;
}

.rockstate.display .fill.cursor {
	left: 0px !important;
	-webkit-filter: contrast(50%);
}

.rockstate.display:hover .fill.cursor {
	-webkit-filter: contrast(100%);
}



.rockstate.display .fill.cursor:before {
	content: "Marked as:";
	font-size: 10px;
	-webkit-filter: brightness(100%);
	color: rgba(255,255,255,.9);
	position: relative;
	top: 14px;
}

.rockstate input[value='Complete'] ~ .fill.cursor {
	background-color: #449D44;
	left: 160px;
}

.rockstate input[value='OnTrack'] ~ .fill.cursor {
	background-color: #1F68EC;
	left: 80px;
}

.rockstate input[value='AtRisk'] ~ .fill.cursor {
	background-color: #D9534F;
	left: 0px;
}

.rockstate input[value='Indeterminate'] ~ .fill.cursor {
	left: 80px;
	-ms-opacity: 0;
	opacity: 0;
}

.rockstate.display input[value='Complete'] ~ .rockstate-AtRisk,
.rockstate.display input[value='Complete'] ~ .rockstate-Indeterminate,
.rockstate.display input[value='Complete'] ~ .rockstate-OnTrack {
	display: none;
}

.rockstate.display input[value='AtRisk'] ~ .rockstate-Complete,
.rockstate.display input[value='AtRisk'] ~ .rockstate-Indeterminate,
.rockstate.display input[value='AtRisk'] ~ .rockstate-OnTrack {
	display: none;
}

.rockstate.display input[value='OnTrack'] ~ .rockstate-Complete,
.rockstate.display input[value='OnTrack'] ~ .rockstate-Indeterminate,
.rockstate.display input[value='OnTrack'] ~ .rockstate-AtRisk {
	display: none;
}

.rockstate.display input[value='Indeterminate'] ~ .rockstate-Complete,
.rockstate.display input[value='Indeterminate'] ~ .rockstate-OnTrack,
.rockstate.display input[value='Indeterminate'] ~ .rockstate-AtRisk {
	display: none;
}


.rockstate-val.rockstate-Indeterminate {
	font-size: 80%;
}

.toText.Complete:after {
	content: "Complete";
}

.toText.AtRisk:after {
	content: "Off Track";
}

.toText.OnTrack:after {
	content: "On Track";
}

.toText.Indeterminate:after {
	content: "Unspecified";
	font-style: italic;
}
